// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kythe/proto/filetree.proto

/*
Package filetree_go_proto is a generated protocol buffer package.

It is generated from these files:
	kythe/proto/filetree.proto

It has these top-level messages:
	CorpusRootsRequest
	CorpusRootsReply
	DirectoryRequest
	DirectoryReply
*/
package filetree_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CorpusRootsRequest struct {
}

func (m *CorpusRootsRequest) Reset()                    { *m = CorpusRootsRequest{} }
func (m *CorpusRootsRequest) String() string            { return proto.CompactTextString(m) }
func (*CorpusRootsRequest) ProtoMessage()               {}
func (*CorpusRootsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CorpusRootsReply struct {
	Corpus []*CorpusRootsReply_Corpus `protobuf:"bytes,1,rep,name=corpus" json:"corpus,omitempty"`
}

func (m *CorpusRootsReply) Reset()                    { *m = CorpusRootsReply{} }
func (m *CorpusRootsReply) String() string            { return proto.CompactTextString(m) }
func (*CorpusRootsReply) ProtoMessage()               {}
func (*CorpusRootsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CorpusRootsReply) GetCorpus() []*CorpusRootsReply_Corpus {
	if m != nil {
		return m.Corpus
	}
	return nil
}

type CorpusRootsReply_Corpus struct {
	Name string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Root []string `protobuf:"bytes,2,rep,name=root" json:"root,omitempty"`
}

func (m *CorpusRootsReply_Corpus) Reset()                    { *m = CorpusRootsReply_Corpus{} }
func (m *CorpusRootsReply_Corpus) String() string            { return proto.CompactTextString(m) }
func (*CorpusRootsReply_Corpus) ProtoMessage()               {}
func (*CorpusRootsReply_Corpus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *CorpusRootsReply_Corpus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CorpusRootsReply_Corpus) GetRoot() []string {
	if m != nil {
		return m.Root
	}
	return nil
}

type DirectoryRequest struct {
	Corpus string `protobuf:"bytes,1,opt,name=corpus" json:"corpus,omitempty"`
	Root   string `protobuf:"bytes,2,opt,name=root" json:"root,omitempty"`
	Path   string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
}

func (m *DirectoryRequest) Reset()                    { *m = DirectoryRequest{} }
func (m *DirectoryRequest) String() string            { return proto.CompactTextString(m) }
func (*DirectoryRequest) ProtoMessage()               {}
func (*DirectoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DirectoryRequest) GetCorpus() string {
	if m != nil {
		return m.Corpus
	}
	return ""
}

func (m *DirectoryRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *DirectoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DirectoryReply struct {
	Subdirectory []string `protobuf:"bytes,1,rep,name=subdirectory" json:"subdirectory,omitempty"`
	File         []string `protobuf:"bytes,2,rep,name=file" json:"file,omitempty"`
}

func (m *DirectoryReply) Reset()                    { *m = DirectoryReply{} }
func (m *DirectoryReply) String() string            { return proto.CompactTextString(m) }
func (*DirectoryReply) ProtoMessage()               {}
func (*DirectoryReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DirectoryReply) GetSubdirectory() []string {
	if m != nil {
		return m.Subdirectory
	}
	return nil
}

func (m *DirectoryReply) GetFile() []string {
	if m != nil {
		return m.File
	}
	return nil
}

func init() {
	proto.RegisterType((*CorpusRootsRequest)(nil), "kythe.proto.CorpusRootsRequest")
	proto.RegisterType((*CorpusRootsReply)(nil), "kythe.proto.CorpusRootsReply")
	proto.RegisterType((*CorpusRootsReply_Corpus)(nil), "kythe.proto.CorpusRootsReply.Corpus")
	proto.RegisterType((*DirectoryRequest)(nil), "kythe.proto.DirectoryRequest")
	proto.RegisterType((*DirectoryReply)(nil), "kythe.proto.DirectoryReply")
}

func init() { proto.RegisterFile("kythe/proto/filetree.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0xfb, 0x8f, 0x04, 0x32, 0x11, 0x2d, 0x8b, 0x48, 0x88, 0x48, 0xe3, 0xe2, 0xa1,
	0xa7, 0x54, 0xea, 0xd5, 0x93, 0x8a, 0xe8, 0x49, 0x88, 0xbe, 0x40, 0x9b, 0x8e, 0x6d, 0x30, 0x75,
	0xe2, 0xee, 0xa6, 0x90, 0xab, 0xef, 0xe3, 0x3b, 0xca, 0x6e, 0x12, 0xd9, 0x14, 0xea, 0x69, 0x67,
	0x7e, 0x3b, 0xdf, 0xf0, 0xcd, 0x07, 0xf1, 0x7b, 0xa3, 0xd7, 0x38, 0xad, 0x24, 0x69, 0x9a, 0xbe,
	0x15, 0x25, 0x6a, 0x89, 0x98, 0xda, 0x96, 0x87, 0xf6, 0xaf, 0x6d, 0xc4, 0x09, 0xf0, 0x3b, 0x92,
	0x55, 0xad, 0x32, 0x22, 0xad, 0x32, 0xfc, 0xac, 0x51, 0x69, 0xf1, 0xc5, 0x60, 0x34, 0xc0, 0x55,
	0xd9, 0xf0, 0x1b, 0xf0, 0x73, 0xcb, 0x22, 0x96, 0x78, 0x93, 0x70, 0x76, 0x99, 0x3a, 0x8b, 0xd2,
	0xdd, 0xf1, 0x1e, 0x74, 0x9a, 0xf8, 0x0a, 0xfc, 0x96, 0x70, 0x0e, 0x07, 0x1f, 0xf3, 0x0d, 0x46,
	0x2c, 0x61, 0x93, 0x20, 0xb3, 0xb5, 0x61, 0x92, 0x48, 0x47, 0xff, 0x13, 0xcf, 0x30, 0x53, 0x8b,
	0x0c, 0x46, 0xf7, 0x85, 0xc4, 0x5c, 0x93, 0x6c, 0x3a, 0x63, 0xfc, 0xd4, 0xf1, 0x60, 0xd4, 0x5d,
	0xe7, 0xe8, 0x59, 0xaf, 0x37, 0xac, 0x9a, 0xeb, 0x75, 0xe4, 0xb5, 0xcc, 0xd4, 0xe2, 0x11, 0x8e,
	0x9c, 0x9d, 0xe6, 0x2a, 0x01, 0x87, 0xaa, 0x5e, 0x2c, 0x7b, 0x68, 0x6f, 0x0b, 0xb2, 0x01, 0x33,
	0x9b, 0x4c, 0x86, 0xbd, 0x3b, 0x53, 0xcf, 0xbe, 0x19, 0x1c, 0x3f, 0x14, 0x25, 0xbe, 0x4a, 0xc4,
	0x17, 0x94, 0xdb, 0x22, 0x47, 0xfe, 0x0c, 0xa1, 0x13, 0x03, 0x1f, 0xef, 0x0f, 0xc8, 0x5e, 0x13,
	0x9f, 0xff, 0x99, 0xa0, 0xf8, 0xc7, 0x9f, 0x20, 0xf8, 0xb5, 0xcb, 0x87, 0xd3, 0xbb, 0xd1, 0xc4,
	0x67, 0xfb, 0xbe, 0xed, 0xaa, 0xdb, 0x0b, 0x18, 0xe7, 0xb4, 0x49, 0x57, 0x44, 0xab, 0x12, 0xd3,
	0x25, 0x6e, 0x35, 0x51, 0xa9, 0x5c, 0xcd, 0xc2, 0xb7, 0xcf, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x16, 0x26, 0x69, 0xac, 0x3d, 0x02, 0x00, 0x00,
}
