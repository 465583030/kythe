// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kythe/proto/explore.proto

/*
Package explore_go_proto is a generated protocol buffer package.

It is generated from these files:
	kythe/proto/explore.proto

It has these top-level messages:
	NodeData
	GraphNode
	Graph
	NodeFilter
	Tickets
	TypeHierarchyRequest
	TypeHierarchyReply
	CallersRequest
	CallersReply
	CalleesRequest
	CalleesReply
	ParametersRequest
	ParametersReply
	ParentsRequest
	ParentsReply
	ChildrenRequest
	ChildrenReply
*/
package explore_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import kythe_proto_common "kythe.io/kythe/proto/common_go_proto"
import kythe_proto "kythe.io/kythe/proto/storage_go_proto"
import kythe_proto1 "kythe.io/kythe/proto/xref_go_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeData struct {
	Kind             string                           `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Subkind          string                           `protobuf:"bytes,2,opt,name=subkind" json:"subkind,omitempty"`
	Locations        []*kythe_proto1.Location         `protobuf:"bytes,3,rep,name=locations" json:"locations,omitempty"`
	DefinitionAnchor string                           `protobuf:"bytes,4,opt,name=definition_anchor,json=definitionAnchor" json:"definition_anchor,omitempty"`
	Code             *kythe_proto_common.MarkedSource `protobuf:"bytes,5,opt,name=code" json:"code,omitempty"`
}

func (m *NodeData) Reset()                    { *m = NodeData{} }
func (m *NodeData) String() string            { return proto.CompactTextString(m) }
func (*NodeData) ProtoMessage()               {}
func (*NodeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeData) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *NodeData) GetSubkind() string {
	if m != nil {
		return m.Subkind
	}
	return ""
}

func (m *NodeData) GetLocations() []*kythe_proto1.Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *NodeData) GetDefinitionAnchor() string {
	if m != nil {
		return m.DefinitionAnchor
	}
	return ""
}

func (m *NodeData) GetCode() *kythe_proto_common.MarkedSource {
	if m != nil {
		return m.Code
	}
	return nil
}

type GraphNode struct {
	NodeData     *NodeData `protobuf:"bytes,1,opt,name=node_data,json=nodeData" json:"node_data,omitempty"`
	Predecessors *Tickets  `protobuf:"bytes,2,opt,name=predecessors" json:"predecessors,omitempty"`
	Successors   *Tickets  `protobuf:"bytes,3,opt,name=successors" json:"successors,omitempty"`
}

func (m *GraphNode) Reset()                    { *m = GraphNode{} }
func (m *GraphNode) String() string            { return proto.CompactTextString(m) }
func (*GraphNode) ProtoMessage()               {}
func (*GraphNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GraphNode) GetNodeData() *NodeData {
	if m != nil {
		return m.NodeData
	}
	return nil
}

func (m *GraphNode) GetPredecessors() *Tickets {
	if m != nil {
		return m.Predecessors
	}
	return nil
}

func (m *GraphNode) GetSuccessors() *Tickets {
	if m != nil {
		return m.Successors
	}
	return nil
}

type Graph struct {
	Nodes map[string]*GraphNode `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Graph) Reset()                    { *m = Graph{} }
func (m *Graph) String() string            { return proto.CompactTextString(m) }
func (*Graph) ProtoMessage()               {}
func (*Graph) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Graph) GetNodes() map[string]*GraphNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeFilter struct {
	IncludedLanguages []string             `protobuf:"bytes,1,rep,name=included_languages,json=includedLanguages" json:"included_languages,omitempty"`
	IncludedFiles     []*kythe_proto.VName `protobuf:"bytes,2,rep,name=included_files,json=includedFiles" json:"included_files,omitempty"`
}

func (m *NodeFilter) Reset()                    { *m = NodeFilter{} }
func (m *NodeFilter) String() string            { return proto.CompactTextString(m) }
func (*NodeFilter) ProtoMessage()               {}
func (*NodeFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NodeFilter) GetIncludedLanguages() []string {
	if m != nil {
		return m.IncludedLanguages
	}
	return nil
}

func (m *NodeFilter) GetIncludedFiles() []*kythe_proto.VName {
	if m != nil {
		return m.IncludedFiles
	}
	return nil
}

type Tickets struct {
	Tickets []string `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
}

func (m *Tickets) Reset()                    { *m = Tickets{} }
func (m *Tickets) String() string            { return proto.CompactTextString(m) }
func (*Tickets) ProtoMessage()               {}
func (*Tickets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Tickets) GetTickets() []string {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type TypeHierarchyRequest struct {
	TypeTicket string      `protobuf:"bytes,1,opt,name=type_ticket,json=typeTicket" json:"type_ticket,omitempty"`
	NodeFilter *NodeFilter `protobuf:"bytes,2,opt,name=node_filter,json=nodeFilter" json:"node_filter,omitempty"`
}

func (m *TypeHierarchyRequest) Reset()                    { *m = TypeHierarchyRequest{} }
func (m *TypeHierarchyRequest) String() string            { return proto.CompactTextString(m) }
func (*TypeHierarchyRequest) ProtoMessage()               {}
func (*TypeHierarchyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TypeHierarchyRequest) GetTypeTicket() string {
	if m != nil {
		return m.TypeTicket
	}
	return ""
}

func (m *TypeHierarchyRequest) GetNodeFilter() *NodeFilter {
	if m != nil {
		return m.NodeFilter
	}
	return nil
}

type TypeHierarchyReply struct {
	TypeTicket string `protobuf:"bytes,1,opt,name=type_ticket,json=typeTicket" json:"type_ticket,omitempty"`
	Graph      *Graph `protobuf:"bytes,2,opt,name=graph" json:"graph,omitempty"`
}

func (m *TypeHierarchyReply) Reset()                    { *m = TypeHierarchyReply{} }
func (m *TypeHierarchyReply) String() string            { return proto.CompactTextString(m) }
func (*TypeHierarchyReply) ProtoMessage()               {}
func (*TypeHierarchyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *TypeHierarchyReply) GetTypeTicket() string {
	if m != nil {
		return m.TypeTicket
	}
	return ""
}

func (m *TypeHierarchyReply) GetGraph() *Graph {
	if m != nil {
		return m.Graph
	}
	return nil
}

type CallersRequest struct {
	FunctionTicket string      `protobuf:"bytes,1,opt,name=function_ticket,json=functionTicket" json:"function_ticket,omitempty"`
	NodeFilter     *NodeFilter `protobuf:"bytes,2,opt,name=node_filter,json=nodeFilter" json:"node_filter,omitempty"`
}

func (m *CallersRequest) Reset()                    { *m = CallersRequest{} }
func (m *CallersRequest) String() string            { return proto.CompactTextString(m) }
func (*CallersRequest) ProtoMessage()               {}
func (*CallersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CallersRequest) GetFunctionTicket() string {
	if m != nil {
		return m.FunctionTicket
	}
	return ""
}

func (m *CallersRequest) GetNodeFilter() *NodeFilter {
	if m != nil {
		return m.NodeFilter
	}
	return nil
}

type CallersReply struct {
	FunctionTicket string `protobuf:"bytes,1,opt,name=function_ticket,json=functionTicket" json:"function_ticket,omitempty"`
	Graph          *Graph `protobuf:"bytes,2,opt,name=graph" json:"graph,omitempty"`
}

func (m *CallersReply) Reset()                    { *m = CallersReply{} }
func (m *CallersReply) String() string            { return proto.CompactTextString(m) }
func (*CallersReply) ProtoMessage()               {}
func (*CallersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CallersReply) GetFunctionTicket() string {
	if m != nil {
		return m.FunctionTicket
	}
	return ""
}

func (m *CallersReply) GetGraph() *Graph {
	if m != nil {
		return m.Graph
	}
	return nil
}

type CalleesRequest struct {
	FunctionTicket string      `protobuf:"bytes,1,opt,name=function_ticket,json=functionTicket" json:"function_ticket,omitempty"`
	NodeFilter     *NodeFilter `protobuf:"bytes,2,opt,name=node_filter,json=nodeFilter" json:"node_filter,omitempty"`
}

func (m *CalleesRequest) Reset()                    { *m = CalleesRequest{} }
func (m *CalleesRequest) String() string            { return proto.CompactTextString(m) }
func (*CalleesRequest) ProtoMessage()               {}
func (*CalleesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CalleesRequest) GetFunctionTicket() string {
	if m != nil {
		return m.FunctionTicket
	}
	return ""
}

func (m *CalleesRequest) GetNodeFilter() *NodeFilter {
	if m != nil {
		return m.NodeFilter
	}
	return nil
}

type CalleesReply struct {
	FunctionTicket string `protobuf:"bytes,1,opt,name=function_ticket,json=functionTicket" json:"function_ticket,omitempty"`
	Graph          *Graph `protobuf:"bytes,2,opt,name=graph" json:"graph,omitempty"`
}

func (m *CalleesReply) Reset()                    { *m = CalleesReply{} }
func (m *CalleesReply) String() string            { return proto.CompactTextString(m) }
func (*CalleesReply) ProtoMessage()               {}
func (*CalleesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CalleesReply) GetFunctionTicket() string {
	if m != nil {
		return m.FunctionTicket
	}
	return ""
}

func (m *CalleesReply) GetGraph() *Graph {
	if m != nil {
		return m.Graph
	}
	return nil
}

type ParametersRequest struct {
	FunctionTickets []string `protobuf:"bytes,1,rep,name=function_tickets,json=functionTickets" json:"function_tickets,omitempty"`
}

func (m *ParametersRequest) Reset()                    { *m = ParametersRequest{} }
func (m *ParametersRequest) String() string            { return proto.CompactTextString(m) }
func (*ParametersRequest) ProtoMessage()               {}
func (*ParametersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ParametersRequest) GetFunctionTickets() []string {
	if m != nil {
		return m.FunctionTickets
	}
	return nil
}

type ParametersReply struct {
	FunctionToParameters  map[string]*Tickets  `protobuf:"bytes,1,rep,name=function_to_parameters,json=functionToParameters" json:"function_to_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FunctionToReturnValue map[string]string    `protobuf:"bytes,2,rep,name=function_to_return_value,json=functionToReturnValue" json:"function_to_return_value,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NodeData              map[string]*NodeData `protobuf:"bytes,3,rep,name=node_data,json=nodeData" json:"node_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ParametersReply) Reset()                    { *m = ParametersReply{} }
func (m *ParametersReply) String() string            { return proto.CompactTextString(m) }
func (*ParametersReply) ProtoMessage()               {}
func (*ParametersReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ParametersReply) GetFunctionToParameters() map[string]*Tickets {
	if m != nil {
		return m.FunctionToParameters
	}
	return nil
}

func (m *ParametersReply) GetFunctionToReturnValue() map[string]string {
	if m != nil {
		return m.FunctionToReturnValue
	}
	return nil
}

func (m *ParametersReply) GetNodeData() map[string]*NodeData {
	if m != nil {
		return m.NodeData
	}
	return nil
}

type ParentsRequest struct {
	Ticket []string `protobuf:"bytes,1,rep,name=ticket" json:"ticket,omitempty"`
}

func (m *ParentsRequest) Reset()                    { *m = ParentsRequest{} }
func (m *ParentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ParentsRequest) ProtoMessage()               {}
func (*ParentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ParentsRequest) GetTicket() []string {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type ParentsReply struct {
	InputToParents map[string]*Tickets  `protobuf:"bytes,1,rep,name=input_to_parents,json=inputToParents" json:"input_to_parents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NodeData       map[string]*NodeData `protobuf:"bytes,2,rep,name=node_data,json=nodeData" json:"node_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ParentsReply) Reset()                    { *m = ParentsReply{} }
func (m *ParentsReply) String() string            { return proto.CompactTextString(m) }
func (*ParentsReply) ProtoMessage()               {}
func (*ParentsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ParentsReply) GetInputToParents() map[string]*Tickets {
	if m != nil {
		return m.InputToParents
	}
	return nil
}

func (m *ParentsReply) GetNodeData() map[string]*NodeData {
	if m != nil {
		return m.NodeData
	}
	return nil
}

type ChildrenRequest struct {
	Ticket     []string    `protobuf:"bytes,1,rep,name=ticket" json:"ticket,omitempty"`
	NodeFilter *NodeFilter `protobuf:"bytes,2,opt,name=node_filter,json=nodeFilter" json:"node_filter,omitempty"`
}

func (m *ChildrenRequest) Reset()                    { *m = ChildrenRequest{} }
func (m *ChildrenRequest) String() string            { return proto.CompactTextString(m) }
func (*ChildrenRequest) ProtoMessage()               {}
func (*ChildrenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ChildrenRequest) GetTicket() []string {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *ChildrenRequest) GetNodeFilter() *NodeFilter {
	if m != nil {
		return m.NodeFilter
	}
	return nil
}

type ChildrenReply struct {
	InputToChildren map[string]*Tickets  `protobuf:"bytes,1,rep,name=input_to_children,json=inputToChildren" json:"input_to_children,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NodeData        map[string]*NodeData `protobuf:"bytes,2,rep,name=node_data,json=nodeData" json:"node_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ChildrenReply) Reset()                    { *m = ChildrenReply{} }
func (m *ChildrenReply) String() string            { return proto.CompactTextString(m) }
func (*ChildrenReply) ProtoMessage()               {}
func (*ChildrenReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ChildrenReply) GetInputToChildren() map[string]*Tickets {
	if m != nil {
		return m.InputToChildren
	}
	return nil
}

func (m *ChildrenReply) GetNodeData() map[string]*NodeData {
	if m != nil {
		return m.NodeData
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeData)(nil), "kythe.proto.NodeData")
	proto.RegisterType((*GraphNode)(nil), "kythe.proto.GraphNode")
	proto.RegisterType((*Graph)(nil), "kythe.proto.Graph")
	proto.RegisterType((*NodeFilter)(nil), "kythe.proto.NodeFilter")
	proto.RegisterType((*Tickets)(nil), "kythe.proto.Tickets")
	proto.RegisterType((*TypeHierarchyRequest)(nil), "kythe.proto.TypeHierarchyRequest")
	proto.RegisterType((*TypeHierarchyReply)(nil), "kythe.proto.TypeHierarchyReply")
	proto.RegisterType((*CallersRequest)(nil), "kythe.proto.CallersRequest")
	proto.RegisterType((*CallersReply)(nil), "kythe.proto.CallersReply")
	proto.RegisterType((*CalleesRequest)(nil), "kythe.proto.CalleesRequest")
	proto.RegisterType((*CalleesReply)(nil), "kythe.proto.CalleesReply")
	proto.RegisterType((*ParametersRequest)(nil), "kythe.proto.ParametersRequest")
	proto.RegisterType((*ParametersReply)(nil), "kythe.proto.ParametersReply")
	proto.RegisterType((*ParentsRequest)(nil), "kythe.proto.ParentsRequest")
	proto.RegisterType((*ParentsReply)(nil), "kythe.proto.ParentsReply")
	proto.RegisterType((*ChildrenRequest)(nil), "kythe.proto.ChildrenRequest")
	proto.RegisterType((*ChildrenReply)(nil), "kythe.proto.ChildrenReply")
}

func init() { proto.RegisterFile("kythe/proto/explore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 996 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0x8e, 0xe3, 0xb8, 0x89, 0x8f, 0x13, 0x3b, 0x19, 0xdc, 0xe0, 0xb8, 0x85, 0x84, 0xed, 0x45,
	0x4d, 0x4b, 0x1d, 0xc9, 0xa9, 0x20, 0x70, 0x81, 0x04, 0x69, 0xd2, 0x22, 0x85, 0x2a, 0xda, 0x96,
	0x16, 0x09, 0x21, 0x6b, 0xba, 0x7b, 0x6c, 0xaf, 0xbc, 0xde, 0xd9, 0xce, 0xee, 0x46, 0xf5, 0x4b,
	0xf0, 0x2a, 0x5c, 0xf2, 0x12, 0x5c, 0x70, 0xcd, 0x1d, 0x6f, 0x82, 0x66, 0x66, 0x67, 0xbd, 0xe3,
	0xac, 0xdd, 0xa2, 0x12, 0xc1, 0xdd, 0xcc, 0xf9, 0xf9, 0xbe, 0xf3, 0xb7, 0x67, 0x16, 0xf6, 0xc6,
	0xd3, 0x78, 0x84, 0x87, 0x21, 0x67, 0x31, 0x3b, 0xc4, 0x37, 0xa1, 0xcf, 0x38, 0x76, 0xe5, 0x8d,
	0xd4, 0xa4, 0x4a, 0x5d, 0xda, 0xad, 0xbc, 0x9d, 0xc3, 0x26, 0x13, 0x16, 0xa4, 0x1a, 0x03, 0x21,
	0x8a, 0x19, 0xa7, 0x43, 0xed, 0xb4, 0x9b, 0x57, 0xbd, 0xe1, 0x38, 0x50, 0x72, 0xeb, 0x8f, 0x12,
	0x6c, 0x3c, 0x65, 0x2e, 0x3e, 0xa2, 0x31, 0x25, 0x04, 0xd6, 0xc6, 0x5e, 0xe0, 0xb6, 0x4a, 0x07,
	0xa5, 0x4e, 0xd5, 0x96, 0x67, 0xd2, 0x82, 0xf5, 0x28, 0x79, 0x25, 0xc5, 0xab, 0x52, 0xac, 0xaf,
	0xe4, 0x08, 0xaa, 0x3e, 0x73, 0x68, 0xec, 0xb1, 0x20, 0x6a, 0x95, 0x0f, 0xca, 0x9d, 0x5a, 0xef,
	0x66, 0x37, 0x17, 0x68, 0xf7, 0x3c, 0xd5, 0xda, 0x33, 0x3b, 0x72, 0x1f, 0x76, 0x5c, 0x1c, 0x78,
	0x81, 0x27, 0xae, 0x7d, 0x1a, 0x38, 0x23, 0xc6, 0x5b, 0x6b, 0x12, 0x78, 0x7b, 0xa6, 0xf8, 0x46,
	0xca, 0xc9, 0x43, 0x58, 0x73, 0x98, 0x8b, 0xad, 0xca, 0x41, 0xa9, 0x53, 0xeb, 0x1d, 0x18, 0xe0,
	0x69, 0xe2, 0xdf, 0x53, 0x3e, 0x46, 0xf7, 0x19, 0x4b, 0xb8, 0x83, 0xb6, 0xb4, 0xb6, 0x7e, 0x2d,
	0x41, 0xf5, 0x31, 0xa7, 0xe1, 0x48, 0xe4, 0x45, 0x7a, 0x50, 0x0d, 0x98, 0x8b, 0x7d, 0x97, 0xc6,
	0x54, 0x26, 0x36, 0x1f, 0xa5, 0xce, 0xde, 0xde, 0x08, 0x74, 0x1d, 0x8e, 0x61, 0x33, 0xe4, 0xe8,
	0xa2, 0x83, 0x51, 0xc4, 0x78, 0x24, 0x13, 0xaf, 0xf5, 0x9a, 0x86, 0xdb, 0x73, 0xcf, 0x19, 0x63,
	0x1c, 0xd9, 0x86, 0x25, 0x79, 0x08, 0x10, 0x25, 0x8e, 0xf6, 0x2b, 0x2f, 0xf1, 0xcb, 0xd9, 0x59,
	0xbf, 0x94, 0xa0, 0x22, 0x23, 0x26, 0x47, 0x50, 0x11, 0x51, 0x44, 0xad, 0x92, 0xac, 0xe7, 0x47,
	0x86, 0xab, 0x34, 0x91, 0xf1, 0x46, 0xa7, 0x41, 0xcc, 0xa7, 0xb6, 0xb2, 0x6d, 0x5f, 0x00, 0xcc,
	0x84, 0x64, 0x1b, 0xca, 0x63, 0x9c, 0xa6, 0x3d, 0x14, 0x47, 0xf2, 0x19, 0x54, 0x2e, 0xa9, 0x9f,
	0x60, 0x9a, 0xc7, 0xee, 0x55, 0x50, 0xe1, 0x6e, 0x2b, 0xa3, 0xaf, 0x56, 0x8f, 0x4b, 0xd6, 0xa5,
	0x42, 0x3c, 0xf3, 0xfc, 0x18, 0x39, 0x79, 0x00, 0xc4, 0x0b, 0x1c, 0x3f, 0x71, 0xd1, 0xed, 0xfb,
	0x34, 0x18, 0x26, 0x74, 0x98, 0x46, 0x58, 0xb5, 0x77, 0xb4, 0xe6, 0x5c, 0x2b, 0xc8, 0x97, 0x50,
	0xcf, 0xcc, 0x07, 0x9e, 0x8f, 0xa2, 0x7e, 0x22, 0x19, 0x62, 0xf0, 0xbe, 0x78, 0x4a, 0x27, 0x68,
	0x6f, 0x69, 0xcb, 0x33, 0x61, 0x68, 0xdd, 0x81, 0xf5, 0xb4, 0x3e, 0x62, 0xee, 0x62, 0x75, 0x4c,
	0x99, 0xf4, 0xd5, 0x7a, 0x0d, 0xcd, 0xe7, 0xd3, 0x10, 0x9f, 0x78, 0xc8, 0x29, 0x77, 0x46, 0x53,
	0x1b, 0x5f, 0x27, 0x18, 0xc5, 0x64, 0x1f, 0x6a, 0xf1, 0x34, 0xc4, 0xbe, 0xb2, 0x4b, 0x0b, 0x00,
	0x42, 0xa4, 0x30, 0xc9, 0x31, 0xd4, 0xe4, 0x28, 0x0c, 0x64, 0x5a, 0x69, 0x35, 0x3e, 0xbc, 0x32,
	0x0c, 0x2a, 0x6b, 0x1b, 0x82, 0xec, 0x6c, 0xf5, 0x81, 0xcc, 0x51, 0x86, 0xfe, 0xf4, 0xed, 0x84,
	0x1d, 0xa8, 0x0c, 0x45, 0x79, 0x53, 0x2a, 0x72, 0xb5, 0xf0, 0xb6, 0x32, 0xb0, 0x22, 0xa8, 0x9f,
	0x50, 0xdf, 0x47, 0x1e, 0xe9, 0x6c, 0xee, 0x42, 0x63, 0x90, 0x04, 0x8e, 0xfc, 0x4c, 0x0c, 0x82,
	0xba, 0x16, 0xbf, 0x77, 0x56, 0x14, 0x36, 0x33, 0x52, 0x91, 0xcf, 0x3b, 0x53, 0xfe, 0xf3, 0xbc,
	0xf0, 0xbf, 0xc8, 0x0b, 0xaf, 0x2f, 0xaf, 0xaf, 0x61, 0xe7, 0x82, 0x72, 0x3a, 0xc1, 0x38, 0xd7,
	0xb2, 0x4f, 0x61, 0x7b, 0x8e, 0x47, 0xcf, 0x6e, 0xc3, 0x24, 0x8a, 0xac, 0xdf, 0xd6, 0xa0, 0x91,
	0x07, 0x10, 0x61, 0xfa, 0xb0, 0x3b, 0x73, 0x67, 0xfd, 0x30, 0x53, 0xa7, 0xcb, 0xe0, 0x73, 0x23,
	0x9c, 0x39, 0xef, 0xee, 0x99, 0x66, 0x60, 0x33, 0x8d, 0xda, 0x12, 0xcd, 0x41, 0x81, 0x8a, 0x84,
	0xd0, 0xca, 0xb3, 0x71, 0x8c, 0x13, 0x1e, 0xf4, 0xf5, 0x9e, 0x10, 0x7c, 0x5f, 0xbc, 0x23, 0x9f,
	0x2d, 0x5d, 0x5f, 0x08, 0x4f, 0x45, 0x78, 0x73, 0x50, 0xa4, 0x23, 0x8f, 0xf3, 0x9b, 0x58, 0xbd,
	0x17, 0xf7, 0x96, 0x52, 0xe8, 0xcd, 0xac, 0x50, 0xb3, 0xf5, 0xdc, 0xfe, 0x19, 0xf6, 0x16, 0x66,
	0x5b, 0xb0, 0xfe, 0xee, 0x99, 0xeb, 0xaf, 0x78, 0x1d, 0xcf, 0x96, 0x5f, 0xfb, 0x09, 0xb4, 0x17,
	0x27, 0x57, 0x80, 0xdf, 0xcc, 0xe3, 0x57, 0xf3, 0x48, 0x36, 0x6c, 0x19, 0x39, 0x14, 0x38, 0xdf,
	0x37, 0x83, 0x5b, 0xf0, 0x34, 0xe5, 0x56, 0x73, 0x07, 0xea, 0x17, 0x94, 0x63, 0x10, 0x67, 0x63,
	0xb7, 0x0b, 0x37, 0xb2, 0xa9, 0x16, 0xc3, 0x96, 0xde, 0xac, 0x3f, 0x57, 0x61, 0x33, 0x33, 0x15,
	0x03, 0xf6, 0x12, 0xb6, 0xbd, 0x20, 0x4c, 0xe2, 0x74, 0xba, 0x84, 0x22, 0x1d, 0xad, 0x07, 0xf3,
	0x7d, 0xc8, 0x9c, 0xba, 0xdf, 0x09, 0x0f, 0x59, 0x66, 0x21, 0x53, 0xad, 0xa8, 0x7b, 0x86, 0x90,
	0x3c, 0xca, 0x77, 0x56, 0x0d, 0xcf, 0xdd, 0xc5, 0x88, 0x8b, 0xda, 0xfa, 0x12, 0x3e, 0x28, 0x20,
	0xfb, 0x17, 0x1a, 0x7a, 0x1d, 0x6d, 0x70, 0xa0, 0x71, 0x32, 0xf2, 0x7c, 0x97, 0x63, 0xf0, 0x96,
	0x3e, 0xbc, 0xc7, 0x22, 0xfb, 0x6b, 0x15, 0xb6, 0x66, 0x2c, 0xa2, 0x85, 0x3f, 0xc1, 0x4e, 0xd6,
	0x42, 0x27, 0xd5, 0xa4, 0x3d, 0x3c, 0x34, 0x10, 0x0d, 0x37, 0xdd, 0x44, 0x2d, 0x54, 0x95, 0x6f,
	0x78, 0xa6, 0x94, 0x9c, 0x5e, 0x6d, 0x63, 0x67, 0x09, 0xe8, 0xa2, 0x3e, 0xfe, 0x08, 0xcd, 0x22,
	0xbe, 0xff, 0x67, 0x23, 0x7b, 0xbf, 0x97, 0xa1, 0x7e, 0xaa, 0x7e, 0xb6, 0x9f, 0x21, 0xbf, 0xf4,
	0x1c, 0x24, 0x3f, 0xc0, 0x96, 0xf1, 0xda, 0x93, 0x4f, 0xcc, 0xc0, 0x0a, 0x7e, 0x3e, 0xda, 0xfb,
	0xcb, 0x4c, 0x42, 0x7f, 0x6a, 0xad, 0x90, 0x13, 0x58, 0x4f, 0x9f, 0x5b, 0x72, 0xcb, 0x2c, 0xab,
	0xf1, 0xf2, 0xb7, 0xf7, 0x8a, 0x95, 0x26, 0x08, 0x16, 0x82, 0xe0, 0x32, 0x10, 0xcc, 0x40, 0xce,
	0x01, 0x72, 0x2f, 0xc1, 0xc7, 0x0b, 0x97, 0xb0, 0x82, 0xba, 0xbd, 0x6c, 0x49, 0xab, 0x90, 0xf4,
	0x22, 0xb8, 0x55, 0xfc, 0xd5, 0x17, 0x85, 0x94, 0x5f, 0x09, 0xd6, 0x0a, 0x39, 0x83, 0x8d, 0x6c,
	0x0e, 0x6f, 0x2f, 0x18, 0x3a, 0x05, 0xd3, 0x5e, 0x3c, 0x92, 0xd6, 0xca, 0xb7, 0x77, 0x60, 0xdf,
	0x61, 0x93, 0xee, 0x90, 0xb1, 0xa1, 0x8f, 0x5d, 0x17, 0x2f, 0x63, 0xc6, 0xfc, 0x28, 0xef, 0x72,
	0x51, 0x7a, 0x75, 0x43, 0x1e, 0x8e, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x08, 0x70, 0x36,
	0x72, 0x0d, 0x00, 0x00,
}
