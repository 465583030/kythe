// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kythe/proto/common.proto

/*
Package common_go_proto is a generated protocol buffer package.

It is generated from these files:
	kythe/proto/common.proto

It has these top-level messages:
	Fact
	Point
	Span
	NodeInfo
	Diagnostic
	Link
	MarkedSource
*/
package common_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Link_Kind int32

const (
	Link_DEFINITION Link_Kind = 0
	Link_LIST       Link_Kind = 1
	Link_LIST_ITEM  Link_Kind = 2
	Link_IMPORTANT  Link_Kind = 999
)

var Link_Kind_name = map[int32]string{
	0:   "DEFINITION",
	1:   "LIST",
	2:   "LIST_ITEM",
	999: "IMPORTANT",
}
var Link_Kind_value = map[string]int32{
	"DEFINITION": 0,
	"LIST":       1,
	"LIST_ITEM":  2,
	"IMPORTANT":  999,
}

func (x Link_Kind) String() string {
	return proto.EnumName(Link_Kind_name, int32(x))
}
func (Link_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type MarkedSource_Kind int32

const (
	MarkedSource_BOX                                     MarkedSource_Kind = 0
	MarkedSource_TYPE                                    MarkedSource_Kind = 1
	MarkedSource_PARAMETER                               MarkedSource_Kind = 2
	MarkedSource_IDENTIFIER                              MarkedSource_Kind = 3
	MarkedSource_CONTEXT                                 MarkedSource_Kind = 4
	MarkedSource_INITIALIZER                             MarkedSource_Kind = 5
	MarkedSource_PARAMETER_LOOKUP_BY_PARAM               MarkedSource_Kind = 6
	MarkedSource_LOOKUP_BY_PARAM                         MarkedSource_Kind = 7
	MarkedSource_PARAMETER_LOOKUP_BY_PARAM_WITH_DEFAULTS MarkedSource_Kind = 8
)

var MarkedSource_Kind_name = map[int32]string{
	0: "BOX",
	1: "TYPE",
	2: "PARAMETER",
	3: "IDENTIFIER",
	4: "CONTEXT",
	5: "INITIALIZER",
	6: "PARAMETER_LOOKUP_BY_PARAM",
	7: "LOOKUP_BY_PARAM",
	8: "PARAMETER_LOOKUP_BY_PARAM_WITH_DEFAULTS",
}
var MarkedSource_Kind_value = map[string]int32{
	"BOX":                                     0,
	"TYPE":                                    1,
	"PARAMETER":                               2,
	"IDENTIFIER":                              3,
	"CONTEXT":                                 4,
	"INITIALIZER":                             5,
	"PARAMETER_LOOKUP_BY_PARAM":               6,
	"LOOKUP_BY_PARAM":                         7,
	"PARAMETER_LOOKUP_BY_PARAM_WITH_DEFAULTS": 8,
}

func (x MarkedSource_Kind) String() string {
	return proto.EnumName(MarkedSource_Kind_name, int32(x))
}
func (MarkedSource_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type Fact struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Fact) Reset()                    { *m = Fact{} }
func (m *Fact) String() string            { return proto.CompactTextString(m) }
func (*Fact) ProtoMessage()               {}
func (*Fact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Fact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fact) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Point struct {
	ByteOffset   int32 `protobuf:"varint,1,opt,name=byte_offset,json=byteOffset" json:"byte_offset,omitempty"`
	LineNumber   int32 `protobuf:"varint,2,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	ColumnOffset int32 `protobuf:"varint,3,opt,name=column_offset,json=columnOffset" json:"column_offset,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Point) GetByteOffset() int32 {
	if m != nil {
		return m.ByteOffset
	}
	return 0
}

func (m *Point) GetLineNumber() int32 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

func (m *Point) GetColumnOffset() int32 {
	if m != nil {
		return m.ColumnOffset
	}
	return 0
}

type Span struct {
	Start *Point `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   *Point `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *Span) Reset()                    { *m = Span{} }
func (m *Span) String() string            { return proto.CompactTextString(m) }
func (*Span) ProtoMessage()               {}
func (*Span) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Span) GetStart() *Point {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Span) GetEnd() *Point {
	if m != nil {
		return m.End
	}
	return nil
}

type NodeInfo struct {
	Facts      map[string][]byte `protobuf:"bytes,2,rep,name=facts" json:"facts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Definition string            `protobuf:"bytes,5,opt,name=definition" json:"definition,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NodeInfo) GetFacts() map[string][]byte {
	if m != nil {
		return m.Facts
	}
	return nil
}

func (m *NodeInfo) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

type Diagnostic struct {
	Span       *Span  `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Details    string `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`
	ContextUrl string `protobuf:"bytes,4,opt,name=context_url,json=contextUrl" json:"context_url,omitempty"`
}

func (m *Diagnostic) Reset()                    { *m = Diagnostic{} }
func (m *Diagnostic) String() string            { return proto.CompactTextString(m) }
func (*Diagnostic) ProtoMessage()               {}
func (*Diagnostic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Diagnostic) GetSpan() *Span {
	if m != nil {
		return m.Span
	}
	return nil
}

func (m *Diagnostic) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Diagnostic) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Diagnostic) GetContextUrl() string {
	if m != nil {
		return m.ContextUrl
	}
	return ""
}

type Link struct {
	Definition []string  `protobuf:"bytes,3,rep,name=definition" json:"definition,omitempty"`
	Kind       Link_Kind `protobuf:"varint,2,opt,name=kind,enum=kythe.proto.common.Link_Kind" json:"kind,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Link) GetDefinition() []string {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *Link) GetKind() Link_Kind {
	if m != nil {
		return m.Kind
	}
	return Link_DEFINITION
}

type MarkedSource struct {
	Kind                 MarkedSource_Kind `protobuf:"varint,1,opt,name=kind,enum=kythe.proto.common.MarkedSource_Kind" json:"kind,omitempty"`
	PreText              string            `protobuf:"bytes,2,opt,name=pre_text,json=preText" json:"pre_text,omitempty"`
	Child                []*MarkedSource   `protobuf:"bytes,3,rep,name=child" json:"child,omitempty"`
	PostChildText        string            `protobuf:"bytes,4,opt,name=post_child_text,json=postChildText" json:"post_child_text,omitempty"`
	PostText             string            `protobuf:"bytes,5,opt,name=post_text,json=postText" json:"post_text,omitempty"`
	LookupIndex          uint32            `protobuf:"varint,6,opt,name=lookup_index,json=lookupIndex" json:"lookup_index,omitempty"`
	DefaultChildrenCount uint32            `protobuf:"varint,7,opt,name=default_children_count,json=defaultChildrenCount" json:"default_children_count,omitempty"`
	AddFinalListToken    bool              `protobuf:"varint,10,opt,name=add_final_list_token,json=addFinalListToken" json:"add_final_list_token,omitempty"`
	Link                 []*Link           `protobuf:"bytes,11,rep,name=link" json:"link,omitempty"`
}

func (m *MarkedSource) Reset()                    { *m = MarkedSource{} }
func (m *MarkedSource) String() string            { return proto.CompactTextString(m) }
func (*MarkedSource) ProtoMessage()               {}
func (*MarkedSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MarkedSource) GetKind() MarkedSource_Kind {
	if m != nil {
		return m.Kind
	}
	return MarkedSource_BOX
}

func (m *MarkedSource) GetPreText() string {
	if m != nil {
		return m.PreText
	}
	return ""
}

func (m *MarkedSource) GetChild() []*MarkedSource {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *MarkedSource) GetPostChildText() string {
	if m != nil {
		return m.PostChildText
	}
	return ""
}

func (m *MarkedSource) GetPostText() string {
	if m != nil {
		return m.PostText
	}
	return ""
}

func (m *MarkedSource) GetLookupIndex() uint32 {
	if m != nil {
		return m.LookupIndex
	}
	return 0
}

func (m *MarkedSource) GetDefaultChildrenCount() uint32 {
	if m != nil {
		return m.DefaultChildrenCount
	}
	return 0
}

func (m *MarkedSource) GetAddFinalListToken() bool {
	if m != nil {
		return m.AddFinalListToken
	}
	return false
}

func (m *MarkedSource) GetLink() []*Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func init() {
	proto.RegisterType((*Fact)(nil), "kythe.proto.common.Fact")
	proto.RegisterType((*Point)(nil), "kythe.proto.common.Point")
	proto.RegisterType((*Span)(nil), "kythe.proto.common.Span")
	proto.RegisterType((*NodeInfo)(nil), "kythe.proto.common.NodeInfo")
	proto.RegisterType((*Diagnostic)(nil), "kythe.proto.common.Diagnostic")
	proto.RegisterType((*Link)(nil), "kythe.proto.common.Link")
	proto.RegisterType((*MarkedSource)(nil), "kythe.proto.common.MarkedSource")
	proto.RegisterEnum("kythe.proto.common.Link_Kind", Link_Kind_name, Link_Kind_value)
	proto.RegisterEnum("kythe.proto.common.MarkedSource_Kind", MarkedSource_Kind_name, MarkedSource_Kind_value)
}

func init() { proto.RegisterFile("kythe/proto/common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 803 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xed, 0x6e, 0xe3, 0x44,
	0x14, 0xc5, 0xb1, 0xdd, 0x24, 0xd7, 0xfd, 0x30, 0x43, 0x85, 0x5c, 0xd0, 0xb2, 0xc1, 0x2b, 0xd8,
	0x48, 0x8b, 0x5c, 0x54, 0x3e, 0xb4, 0x20, 0x21, 0x94, 0xb6, 0x8e, 0x30, 0x9b, 0x26, 0xd1, 0xd4,
	0x15, 0xbb, 0xfc, 0xb1, 0x5c, 0x7b, 0x92, 0x1d, 0xd9, 0x99, 0x89, 0xec, 0xf1, 0xaa, 0x79, 0x0a,
	0x5e, 0x82, 0x17, 0xe0, 0x17, 0x0f, 0xc2, 0x43, 0xf0, 0x1a, 0x68, 0x66, 0x1c, 0x28, 0x4b, 0x96,
	0xfd, 0x37, 0xf7, 0x9c, 0x73, 0xbf, 0xce, 0x1d, 0xf0, 0x8a, 0x8d, 0x78, 0x49, 0x4e, 0xd7, 0x15,
	0x17, 0xfc, 0x34, 0xe3, 0xab, 0x15, 0x67, 0x81, 0x0a, 0x10, 0x52, 0x8c, 0x0e, 0x02, 0xcd, 0xf8,
	0x9f, 0x83, 0x35, 0x4e, 0x33, 0x81, 0x10, 0x58, 0x2c, 0x5d, 0x11, 0xcf, 0x18, 0x18, 0xc3, 0x3e,
	0x56, 0x6f, 0x74, 0x0c, 0xf6, 0xab, 0xb4, 0x6c, 0x88, 0xd7, 0x19, 0x18, 0xc3, 0x7d, 0xac, 0x03,
	0x9f, 0x81, 0x3d, 0xe7, 0x94, 0x09, 0xf4, 0x10, 0x9c, 0xdb, 0x8d, 0x20, 0x09, 0x5f, 0x2c, 0x6a,
	0x22, 0x54, 0xa6, 0x8d, 0x41, 0x42, 0x33, 0x85, 0x48, 0x41, 0x49, 0x19, 0x49, 0x58, 0xb3, 0xba,
	0x25, 0x95, 0xaa, 0x62, 0x63, 0x90, 0xd0, 0x54, 0x21, 0xe8, 0x11, 0x1c, 0x64, 0xbc, 0x6c, 0x56,
	0x6c, 0x5b, 0xc3, 0x54, 0x92, 0x7d, 0x0d, 0xea, 0x2a, 0x7e, 0x0e, 0xd6, 0xf5, 0x3a, 0x65, 0xe8,
	0x14, 0xec, 0x5a, 0xa4, 0x95, 0x6e, 0xe4, 0x9c, 0x9d, 0x04, 0xff, 0xdd, 0x26, 0x50, 0x83, 0x61,
	0xad, 0x43, 0x4f, 0xc0, 0x24, 0x2c, 0x57, 0x6d, 0xff, 0x57, 0x2e, 0x55, 0xfe, 0x6f, 0x06, 0xf4,
	0xa6, 0x3c, 0x27, 0x11, 0x5b, 0x70, 0xf4, 0x1d, 0xd8, 0x8b, 0x34, 0x13, 0xb5, 0xd7, 0x19, 0x98,
	0x43, 0xe7, 0xec, 0xf1, 0xae, 0xdc, 0xad, 0x38, 0x90, 0xf6, 0xd5, 0x21, 0x13, 0xd5, 0x06, 0xeb,
	0x2c, 0xf4, 0x11, 0x40, 0x4e, 0x16, 0x94, 0x51, 0x41, 0x39, 0xf3, 0x6c, 0xe5, 0xe8, 0x3d, 0xe4,
	0x83, 0xa7, 0x00, 0xff, 0x24, 0x21, 0x17, 0xcc, 0x82, 0x6c, 0x5a, 0xe3, 0xe5, 0x73, 0xb7, 0xef,
	0xdf, 0x76, 0x9e, 0x1a, 0x3f, 0x5a, 0x3d, 0xc3, 0xed, 0xe0, 0x3d, 0x41, 0xb3, 0x82, 0x08, 0xff,
	0x17, 0x03, 0xe0, 0x92, 0xa6, 0x4b, 0xc6, 0x6b, 0x41, 0x33, 0xf4, 0x19, 0x58, 0xf5, 0x3a, 0x65,
	0xad, 0x3f, 0xde, 0xae, 0xa1, 0xa5, 0x91, 0x58, 0xa9, 0x90, 0x07, 0xdd, 0x15, 0xa9, 0xeb, 0x74,
	0xa9, 0xdb, 0xf4, 0xf1, 0x36, 0x94, 0x4c, 0x4e, 0x44, 0x4a, 0xcb, 0x5a, 0xdd, 0xa3, 0x8f, 0xb7,
	0xa1, 0x3c, 0x68, 0xc6, 0x99, 0x20, 0x77, 0x22, 0x69, 0xaa, 0xd2, 0xb3, 0xf4, 0x66, 0x2d, 0x74,
	0x53, 0x95, 0xfe, 0xaf, 0x06, 0x58, 0x13, 0xca, 0x8a, 0xd7, 0x2c, 0x30, 0x07, 0xe6, 0xbf, 0x2d,
	0x40, 0x5f, 0x81, 0x55, 0xd0, 0xf6, 0x38, 0x87, 0x67, 0x0f, 0x76, 0xcd, 0x2a, 0xeb, 0x04, 0xcf,
	0x28, 0xcb, 0xcf, 0x3b, 0x9e, 0x81, 0x95, 0xdc, 0xff, 0x1e, 0x2c, 0x89, 0xa0, 0x43, 0x80, 0xcb,
	0x70, 0x1c, 0x4d, 0xa3, 0x38, 0x9a, 0x4d, 0xdd, 0x77, 0x50, 0x0f, 0xac, 0x49, 0x74, 0x1d, 0xbb,
	0x06, 0x3a, 0x80, 0xbe, 0x7c, 0x25, 0x51, 0x1c, 0x5e, 0xb9, 0x1d, 0x74, 0x08, 0xfd, 0xe8, 0x6a,
	0x3e, 0xc3, 0xf1, 0x68, 0x1a, 0xbb, 0x7f, 0x76, 0xb5, 0x81, 0xfe, 0x1f, 0x16, 0xec, 0x5f, 0xa5,
	0x55, 0x41, 0xf2, 0x6b, 0xde, 0x54, 0x19, 0x41, 0xdf, 0xb4, 0xe3, 0x18, 0x6a, 0x9c, 0x4f, 0x76,
	0x8d, 0x73, 0x5f, 0xaf, 0xc6, 0xd2, 0x23, 0xa1, 0x13, 0xe8, 0xad, 0x2b, 0x92, 0x48, 0x07, 0xb6,
	0x46, 0xae, 0x2b, 0x12, 0x93, 0x3b, 0x81, 0xbe, 0x06, 0x3b, 0x7b, 0x49, 0xcb, 0x5c, 0xed, 0xef,
	0x9c, 0x0d, 0xde, 0x56, 0x16, 0x6b, 0x39, 0xfa, 0x14, 0x8e, 0xd6, 0xbc, 0x16, 0x89, 0x8a, 0x74,
	0x65, 0x6d, 0xf5, 0x81, 0x84, 0x2f, 0x24, 0xaa, 0xea, 0x7f, 0x08, 0x7d, 0xa5, 0x53, 0x0a, 0xfd,
	0xcd, 0x7a, 0x12, 0x50, 0xe4, 0xc7, 0xb0, 0x5f, 0x72, 0x5e, 0x34, 0xeb, 0x84, 0xb2, 0x9c, 0xdc,
	0x79, 0x7b, 0x03, 0x63, 0x78, 0x80, 0x1d, 0x8d, 0x45, 0x12, 0x42, 0x5f, 0xc2, 0xfb, 0x39, 0x59,
	0xa4, 0x4d, 0xd9, 0xb6, 0xaa, 0x08, 0x4b, 0x32, 0xde, 0x30, 0xe1, 0x75, 0x95, 0xf8, 0xb8, 0x65,
	0x2f, 0x5a, 0xf2, 0x42, 0x72, 0xe8, 0x14, 0x8e, 0xd3, 0x3c, 0x4f, 0x16, 0x94, 0xa5, 0x65, 0x52,
	0x52, 0xd9, 0x9f, 0x17, 0x84, 0x79, 0x30, 0x30, 0x86, 0x3d, 0xfc, 0x6e, 0x9a, 0xe7, 0x63, 0x49,
	0x4d, 0x68, 0x2d, 0x62, 0x49, 0xc8, 0x7f, 0x59, 0x52, 0x56, 0x78, 0x8e, 0x72, 0xc1, 0x7b, 0xd3,
	0xad, 0xb1, 0x52, 0xf9, 0xbf, 0x1b, 0xed, 0x8d, 0xbb, 0x60, 0x9e, 0xcf, 0x9e, 0xeb, 0xe3, 0xc6,
	0x2f, 0xe6, 0xa1, 0x3e, 0xee, 0x7c, 0x84, 0x47, 0x57, 0x61, 0x1c, 0x62, 0x75, 0x5c, 0x88, 0x2e,
	0xc3, 0x69, 0x1c, 0x8d, 0xa3, 0x10, 0xbb, 0x26, 0x72, 0xa0, 0x7b, 0x31, 0x9b, 0xc6, 0xe1, 0xf3,
	0xd8, 0xb5, 0xd0, 0x11, 0x38, 0xea, 0x7f, 0x8c, 0x26, 0xd1, 0xcf, 0x21, 0x76, 0x6d, 0xf4, 0x00,
	0x4e, 0xfe, 0x4e, 0x4e, 0x26, 0xb3, 0xd9, 0xb3, 0x9b, 0x79, 0x72, 0xfe, 0x22, 0x51, 0x98, 0xbb,
	0x87, 0xde, 0x83, 0xa3, 0xd7, 0xc1, 0x2e, 0x7a, 0x02, 0x8f, 0xdf, 0x98, 0x93, 0xfc, 0x14, 0xc5,
	0x3f, 0x24, 0x97, 0xe1, 0x78, 0x74, 0x33, 0x89, 0xaf, 0xdd, 0xde, 0xf9, 0x23, 0x78, 0x98, 0xf1,
	0x55, 0xb0, 0xe4, 0x7c, 0x59, 0x92, 0x20, 0x27, 0xaf, 0x04, 0xe7, 0x65, 0x7d, 0x7f, 0xdd, 0xb9,
	0x71, 0xbb, 0xa7, 0x1e, 0x5f, 0xfc, 0x15, 0x00, 0x00, 0xff, 0xff, 0xde, 0x16, 0xb6, 0x45, 0xa6,
	0x05, 0x00, 0x00,
}
