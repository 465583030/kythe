// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kythe/proto/serving.proto

/*
Package serving_go_proto is a generated protocol buffer package.

It is generated from these files:
	kythe/proto/serving.proto

It has these top-level messages:
	Node
	Edge
	EdgeGroup
	PagedEdgeSet
	PageIndex
	EdgePage
	FileDirectory
	CorpusRoots
	File
	RawAnchor
	ExpandedAnchor
	FileDecorations
	PagedCrossReferences
	Document
	IdentifierMatch
*/
package serving_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import kythe_proto_common "kythe.io/kythe/proto/common_go_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileDecorations_Override_Kind int32

const (
	FileDecorations_Override_OVERRIDES FileDecorations_Override_Kind = 0
	FileDecorations_Override_EXTENDS   FileDecorations_Override_Kind = 1
)

var FileDecorations_Override_Kind_name = map[int32]string{
	0: "OVERRIDES",
	1: "EXTENDS",
}
var FileDecorations_Override_Kind_value = map[string]int32{
	"OVERRIDES": 0,
	"EXTENDS":   1,
}

func (x FileDecorations_Override_Kind) String() string {
	return proto.EnumName(FileDecorations_Override_Kind_name, int32(x))
}
func (FileDecorations_Override_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 1, 0}
}

type Node struct {
	Ticket             string                     `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	Fact               []*kythe_proto_common.Fact `protobuf:"bytes,2,rep,name=fact" json:"fact,omitempty"`
	DefinitionLocation *ExpandedAnchor            `protobuf:"bytes,3,opt,name=definition_location,json=definitionLocation" json:"definition_location,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *Node) GetFact() []*kythe_proto_common.Fact {
	if m != nil {
		return m.Fact
	}
	return nil
}

func (m *Node) GetDefinitionLocation() *ExpandedAnchor {
	if m != nil {
		return m.DefinitionLocation
	}
	return nil
}

type Edge struct {
	Source  *Node                      `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Kind    string                     `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Ordinal int32                      `protobuf:"varint,5,opt,name=ordinal" json:"ordinal,omitempty"`
	Target  *Node                      `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Fact    []*kythe_proto_common.Fact `protobuf:"bytes,4,rep,name=fact" json:"fact,omitempty"`
}

func (m *Edge) Reset()                    { *m = Edge{} }
func (m *Edge) String() string            { return proto.CompactTextString(m) }
func (*Edge) ProtoMessage()               {}
func (*Edge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Edge) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Edge) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Edge) GetOrdinal() int32 {
	if m != nil {
		return m.Ordinal
	}
	return 0
}

func (m *Edge) GetTarget() *Node {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Edge) GetFact() []*kythe_proto_common.Fact {
	if m != nil {
		return m.Fact
	}
	return nil
}

type EdgeGroup struct {
	Kind string            `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Edge []*EdgeGroup_Edge `protobuf:"bytes,2,rep,name=edge" json:"edge,omitempty"`
}

func (m *EdgeGroup) Reset()                    { *m = EdgeGroup{} }
func (m *EdgeGroup) String() string            { return proto.CompactTextString(m) }
func (*EdgeGroup) ProtoMessage()               {}
func (*EdgeGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EdgeGroup) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *EdgeGroup) GetEdge() []*EdgeGroup_Edge {
	if m != nil {
		return m.Edge
	}
	return nil
}

type EdgeGroup_Edge struct {
	Target  *Node `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Ordinal int32 `protobuf:"varint,2,opt,name=ordinal" json:"ordinal,omitempty"`
}

func (m *EdgeGroup_Edge) Reset()                    { *m = EdgeGroup_Edge{} }
func (m *EdgeGroup_Edge) String() string            { return proto.CompactTextString(m) }
func (*EdgeGroup_Edge) ProtoMessage()               {}
func (*EdgeGroup_Edge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *EdgeGroup_Edge) GetTarget() *Node {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *EdgeGroup_Edge) GetOrdinal() int32 {
	if m != nil {
		return m.Ordinal
	}
	return 0
}

type PagedEdgeSet struct {
	Source     *Node        `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Group      []*EdgeGroup `protobuf:"bytes,2,rep,name=group" json:"group,omitempty"`
	TotalEdges int32        `protobuf:"varint,3,opt,name=total_edges,json=totalEdges" json:"total_edges,omitempty"`
	PageIndex  []*PageIndex `protobuf:"bytes,4,rep,name=page_index,json=pageIndex" json:"page_index,omitempty"`
}

func (m *PagedEdgeSet) Reset()                    { *m = PagedEdgeSet{} }
func (m *PagedEdgeSet) String() string            { return proto.CompactTextString(m) }
func (*PagedEdgeSet) ProtoMessage()               {}
func (*PagedEdgeSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PagedEdgeSet) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *PagedEdgeSet) GetGroup() []*EdgeGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *PagedEdgeSet) GetTotalEdges() int32 {
	if m != nil {
		return m.TotalEdges
	}
	return 0
}

func (m *PagedEdgeSet) GetPageIndex() []*PageIndex {
	if m != nil {
		return m.PageIndex
	}
	return nil
}

type PageIndex struct {
	EdgeKind  string `protobuf:"bytes,1,opt,name=edge_kind,json=edgeKind" json:"edge_kind,omitempty"`
	EdgeCount int32  `protobuf:"varint,2,opt,name=edge_count,json=edgeCount" json:"edge_count,omitempty"`
	PageKey   string `protobuf:"bytes,3,opt,name=page_key,json=pageKey" json:"page_key,omitempty"`
}

func (m *PageIndex) Reset()                    { *m = PageIndex{} }
func (m *PageIndex) String() string            { return proto.CompactTextString(m) }
func (*PageIndex) ProtoMessage()               {}
func (*PageIndex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PageIndex) GetEdgeKind() string {
	if m != nil {
		return m.EdgeKind
	}
	return ""
}

func (m *PageIndex) GetEdgeCount() int32 {
	if m != nil {
		return m.EdgeCount
	}
	return 0
}

func (m *PageIndex) GetPageKey() string {
	if m != nil {
		return m.PageKey
	}
	return ""
}

type EdgePage struct {
	PageKey      string     `protobuf:"bytes,1,opt,name=page_key,json=pageKey" json:"page_key,omitempty"`
	SourceTicket string     `protobuf:"bytes,2,opt,name=source_ticket,json=sourceTicket" json:"source_ticket,omitempty"`
	EdgesGroup   *EdgeGroup `protobuf:"bytes,3,opt,name=edges_group,json=edgesGroup" json:"edges_group,omitempty"`
}

func (m *EdgePage) Reset()                    { *m = EdgePage{} }
func (m *EdgePage) String() string            { return proto.CompactTextString(m) }
func (*EdgePage) ProtoMessage()               {}
func (*EdgePage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EdgePage) GetPageKey() string {
	if m != nil {
		return m.PageKey
	}
	return ""
}

func (m *EdgePage) GetSourceTicket() string {
	if m != nil {
		return m.SourceTicket
	}
	return ""
}

func (m *EdgePage) GetEdgesGroup() *EdgeGroup {
	if m != nil {
		return m.EdgesGroup
	}
	return nil
}

type FileDirectory struct {
	Subdirectory []string `protobuf:"bytes,1,rep,name=subdirectory" json:"subdirectory,omitempty"`
	FileTicket   []string `protobuf:"bytes,2,rep,name=file_ticket,json=fileTicket" json:"file_ticket,omitempty"`
}

func (m *FileDirectory) Reset()                    { *m = FileDirectory{} }
func (m *FileDirectory) String() string            { return proto.CompactTextString(m) }
func (*FileDirectory) ProtoMessage()               {}
func (*FileDirectory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FileDirectory) GetSubdirectory() []string {
	if m != nil {
		return m.Subdirectory
	}
	return nil
}

func (m *FileDirectory) GetFileTicket() []string {
	if m != nil {
		return m.FileTicket
	}
	return nil
}

type CorpusRoots struct {
	Corpus []*CorpusRoots_Corpus `protobuf:"bytes,1,rep,name=corpus" json:"corpus,omitempty"`
}

func (m *CorpusRoots) Reset()                    { *m = CorpusRoots{} }
func (m *CorpusRoots) String() string            { return proto.CompactTextString(m) }
func (*CorpusRoots) ProtoMessage()               {}
func (*CorpusRoots) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CorpusRoots) GetCorpus() []*CorpusRoots_Corpus {
	if m != nil {
		return m.Corpus
	}
	return nil
}

type CorpusRoots_Corpus struct {
	Corpus string   `protobuf:"bytes,1,opt,name=corpus" json:"corpus,omitempty"`
	Root   []string `protobuf:"bytes,2,rep,name=root" json:"root,omitempty"`
}

func (m *CorpusRoots_Corpus) Reset()                    { *m = CorpusRoots_Corpus{} }
func (m *CorpusRoots_Corpus) String() string            { return proto.CompactTextString(m) }
func (*CorpusRoots_Corpus) ProtoMessage()               {}
func (*CorpusRoots_Corpus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *CorpusRoots_Corpus) GetCorpus() string {
	if m != nil {
		return m.Corpus
	}
	return ""
}

func (m *CorpusRoots_Corpus) GetRoot() []string {
	if m != nil {
		return m.Root
	}
	return nil
}

type File struct {
	Ticket   string `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	Text     []byte `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Encoding string `protobuf:"bytes,3,opt,name=encoding" json:"encoding,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *File) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *File) GetText() []byte {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *File) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

type RawAnchor struct {
	Ticket       string `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	StartOffset  int32  `protobuf:"varint,2,opt,name=start_offset,json=startOffset" json:"start_offset,omitempty"`
	EndOffset    int32  `protobuf:"varint,3,opt,name=end_offset,json=endOffset" json:"end_offset,omitempty"`
	SnippetStart int32  `protobuf:"varint,4,opt,name=snippet_start,json=snippetStart" json:"snippet_start,omitempty"`
	SnippetEnd   int32  `protobuf:"varint,5,opt,name=snippet_end,json=snippetEnd" json:"snippet_end,omitempty"`
}

func (m *RawAnchor) Reset()                    { *m = RawAnchor{} }
func (m *RawAnchor) String() string            { return proto.CompactTextString(m) }
func (*RawAnchor) ProtoMessage()               {}
func (*RawAnchor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RawAnchor) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *RawAnchor) GetStartOffset() int32 {
	if m != nil {
		return m.StartOffset
	}
	return 0
}

func (m *RawAnchor) GetEndOffset() int32 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

func (m *RawAnchor) GetSnippetStart() int32 {
	if m != nil {
		return m.SnippetStart
	}
	return 0
}

func (m *RawAnchor) GetSnippetEnd() int32 {
	if m != nil {
		return m.SnippetEnd
	}
	return 0
}

type ExpandedAnchor struct {
	Ticket      string                   `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	Kind        string                   `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Text        string                   `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Span        *kythe_proto_common.Span `protobuf:"bytes,5,opt,name=span" json:"span,omitempty"`
	Snippet     string                   `protobuf:"bytes,6,opt,name=snippet" json:"snippet,omitempty"`
	SnippetSpan *kythe_proto_common.Span `protobuf:"bytes,7,opt,name=snippet_span,json=snippetSpan" json:"snippet_span,omitempty"`
}

func (m *ExpandedAnchor) Reset()                    { *m = ExpandedAnchor{} }
func (m *ExpandedAnchor) String() string            { return proto.CompactTextString(m) }
func (*ExpandedAnchor) ProtoMessage()               {}
func (*ExpandedAnchor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ExpandedAnchor) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *ExpandedAnchor) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ExpandedAnchor) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ExpandedAnchor) GetSpan() *kythe_proto_common.Span {
	if m != nil {
		return m.Span
	}
	return nil
}

func (m *ExpandedAnchor) GetSnippet() string {
	if m != nil {
		return m.Snippet
	}
	return ""
}

func (m *ExpandedAnchor) GetSnippetSpan() *kythe_proto_common.Span {
	if m != nil {
		return m.SnippetSpan
	}
	return nil
}

type FileDecorations struct {
	File              *File                            `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	Decoration        []*FileDecorations_Decoration    `protobuf:"bytes,2,rep,name=decoration" json:"decoration,omitempty"`
	Target            []*Node                          `protobuf:"bytes,4,rep,name=target" json:"target,omitempty"`
	TargetDefinitions []*ExpandedAnchor                `protobuf:"bytes,3,rep,name=target_definitions,json=targetDefinitions" json:"target_definitions,omitempty"`
	TargetOverride    []*FileDecorations_Override      `protobuf:"bytes,5,rep,name=target_override,json=targetOverride" json:"target_override,omitempty"`
	Diagnostic        []*kythe_proto_common.Diagnostic `protobuf:"bytes,6,rep,name=diagnostic" json:"diagnostic,omitempty"`
}

func (m *FileDecorations) Reset()                    { *m = FileDecorations{} }
func (m *FileDecorations) String() string            { return proto.CompactTextString(m) }
func (*FileDecorations) ProtoMessage()               {}
func (*FileDecorations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FileDecorations) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileDecorations) GetDecoration() []*FileDecorations_Decoration {
	if m != nil {
		return m.Decoration
	}
	return nil
}

func (m *FileDecorations) GetTarget() []*Node {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *FileDecorations) GetTargetDefinitions() []*ExpandedAnchor {
	if m != nil {
		return m.TargetDefinitions
	}
	return nil
}

func (m *FileDecorations) GetTargetOverride() []*FileDecorations_Override {
	if m != nil {
		return m.TargetOverride
	}
	return nil
}

func (m *FileDecorations) GetDiagnostic() []*kythe_proto_common.Diagnostic {
	if m != nil {
		return m.Diagnostic
	}
	return nil
}

type FileDecorations_Decoration struct {
	Anchor           *RawAnchor `protobuf:"bytes,1,opt,name=anchor" json:"anchor,omitempty"`
	Kind             string     `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Target           string     `protobuf:"bytes,5,opt,name=target" json:"target,omitempty"`
	TargetDefinition string     `protobuf:"bytes,4,opt,name=target_definition,json=targetDefinition" json:"target_definition,omitempty"`
}

func (m *FileDecorations_Decoration) Reset()                    { *m = FileDecorations_Decoration{} }
func (m *FileDecorations_Decoration) String() string            { return proto.CompactTextString(m) }
func (*FileDecorations_Decoration) ProtoMessage()               {}
func (*FileDecorations_Decoration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func (m *FileDecorations_Decoration) GetAnchor() *RawAnchor {
	if m != nil {
		return m.Anchor
	}
	return nil
}

func (m *FileDecorations_Decoration) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *FileDecorations_Decoration) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *FileDecorations_Decoration) GetTargetDefinition() string {
	if m != nil {
		return m.TargetDefinition
	}
	return ""
}

type FileDecorations_Override struct {
	Overriding           string                           `protobuf:"bytes,1,opt,name=overriding" json:"overriding,omitempty"`
	Overridden           string                           `protobuf:"bytes,2,opt,name=overridden" json:"overridden,omitempty"`
	OverriddenDefinition string                           `protobuf:"bytes,5,opt,name=overridden_definition,json=overriddenDefinition" json:"overridden_definition,omitempty"`
	Kind                 FileDecorations_Override_Kind    `protobuf:"varint,3,opt,name=kind,enum=kythe.proto.serving.FileDecorations_Override_Kind" json:"kind,omitempty"`
	MarkedSource         *kythe_proto_common.MarkedSource `protobuf:"bytes,4,opt,name=marked_source,json=markedSource" json:"marked_source,omitempty"`
}

func (m *FileDecorations_Override) Reset()                    { *m = FileDecorations_Override{} }
func (m *FileDecorations_Override) String() string            { return proto.CompactTextString(m) }
func (*FileDecorations_Override) ProtoMessage()               {}
func (*FileDecorations_Override) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 1} }

func (m *FileDecorations_Override) GetOverriding() string {
	if m != nil {
		return m.Overriding
	}
	return ""
}

func (m *FileDecorations_Override) GetOverridden() string {
	if m != nil {
		return m.Overridden
	}
	return ""
}

func (m *FileDecorations_Override) GetOverriddenDefinition() string {
	if m != nil {
		return m.OverriddenDefinition
	}
	return ""
}

func (m *FileDecorations_Override) GetKind() FileDecorations_Override_Kind {
	if m != nil {
		return m.Kind
	}
	return FileDecorations_Override_OVERRIDES
}

func (m *FileDecorations_Override) GetMarkedSource() *kythe_proto_common.MarkedSource {
	if m != nil {
		return m.MarkedSource
	}
	return nil
}

type PagedCrossReferences struct {
	MergeWith       []string                          `protobuf:"bytes,7,rep,name=merge_with,json=mergeWith" json:"merge_with,omitempty"`
	SourceTicket    string                            `protobuf:"bytes,1,opt,name=source_ticket,json=sourceTicket" json:"source_ticket,omitempty"`
	SourceNode      *Node                             `protobuf:"bytes,8,opt,name=source_node,json=sourceNode" json:"source_node,omitempty"`
	Group           []*PagedCrossReferences_Group     `protobuf:"bytes,2,rep,name=group" json:"group,omitempty"`
	PageIndex       []*PagedCrossReferences_PageIndex `protobuf:"bytes,3,rep,name=page_index,json=pageIndex" json:"page_index,omitempty"`
	TotalReferences int32                             `protobuf:"varint,4,opt,name=total_references,json=totalReferences" json:"total_references,omitempty"`
	Incomplete      bool                              `protobuf:"varint,5,opt,name=incomplete" json:"incomplete,omitempty"`
	MarkedSource    *kythe_proto_common.MarkedSource  `protobuf:"bytes,6,opt,name=marked_source,json=markedSource" json:"marked_source,omitempty"`
}

func (m *PagedCrossReferences) Reset()                    { *m = PagedCrossReferences{} }
func (m *PagedCrossReferences) String() string            { return proto.CompactTextString(m) }
func (*PagedCrossReferences) ProtoMessage()               {}
func (*PagedCrossReferences) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PagedCrossReferences) GetMergeWith() []string {
	if m != nil {
		return m.MergeWith
	}
	return nil
}

func (m *PagedCrossReferences) GetSourceTicket() string {
	if m != nil {
		return m.SourceTicket
	}
	return ""
}

func (m *PagedCrossReferences) GetSourceNode() *Node {
	if m != nil {
		return m.SourceNode
	}
	return nil
}

func (m *PagedCrossReferences) GetGroup() []*PagedCrossReferences_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *PagedCrossReferences) GetPageIndex() []*PagedCrossReferences_PageIndex {
	if m != nil {
		return m.PageIndex
	}
	return nil
}

func (m *PagedCrossReferences) GetTotalReferences() int32 {
	if m != nil {
		return m.TotalReferences
	}
	return 0
}

func (m *PagedCrossReferences) GetIncomplete() bool {
	if m != nil {
		return m.Incomplete
	}
	return false
}

func (m *PagedCrossReferences) GetMarkedSource() *kythe_proto_common.MarkedSource {
	if m != nil {
		return m.MarkedSource
	}
	return nil
}

type PagedCrossReferences_RelatedNode struct {
	Node    *Node `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Ordinal int32 `protobuf:"varint,2,opt,name=ordinal" json:"ordinal,omitempty"`
}

func (m *PagedCrossReferences_RelatedNode) Reset()         { *m = PagedCrossReferences_RelatedNode{} }
func (m *PagedCrossReferences_RelatedNode) String() string { return proto.CompactTextString(m) }
func (*PagedCrossReferences_RelatedNode) ProtoMessage()    {}
func (*PagedCrossReferences_RelatedNode) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

func (m *PagedCrossReferences_RelatedNode) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *PagedCrossReferences_RelatedNode) GetOrdinal() int32 {
	if m != nil {
		return m.Ordinal
	}
	return 0
}

type PagedCrossReferences_Caller struct {
	Caller         *ExpandedAnchor                  `protobuf:"bytes,1,opt,name=caller" json:"caller,omitempty"`
	SemanticCaller string                           `protobuf:"bytes,2,opt,name=semantic_caller,json=semanticCaller" json:"semantic_caller,omitempty"`
	MarkedSource   *kythe_proto_common.MarkedSource `protobuf:"bytes,3,opt,name=marked_source,json=markedSource" json:"marked_source,omitempty"`
	Callsite       []*ExpandedAnchor                `protobuf:"bytes,4,rep,name=callsite" json:"callsite,omitempty"`
}

func (m *PagedCrossReferences_Caller) Reset()                    { *m = PagedCrossReferences_Caller{} }
func (m *PagedCrossReferences_Caller) String() string            { return proto.CompactTextString(m) }
func (*PagedCrossReferences_Caller) ProtoMessage()               {}
func (*PagedCrossReferences_Caller) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 1} }

func (m *PagedCrossReferences_Caller) GetCaller() *ExpandedAnchor {
	if m != nil {
		return m.Caller
	}
	return nil
}

func (m *PagedCrossReferences_Caller) GetSemanticCaller() string {
	if m != nil {
		return m.SemanticCaller
	}
	return ""
}

func (m *PagedCrossReferences_Caller) GetMarkedSource() *kythe_proto_common.MarkedSource {
	if m != nil {
		return m.MarkedSource
	}
	return nil
}

func (m *PagedCrossReferences_Caller) GetCallsite() []*ExpandedAnchor {
	if m != nil {
		return m.Callsite
	}
	return nil
}

type PagedCrossReferences_Group struct {
	Kind        string                              `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Anchor      []*ExpandedAnchor                   `protobuf:"bytes,2,rep,name=anchor" json:"anchor,omitempty"`
	RelatedNode []*PagedCrossReferences_RelatedNode `protobuf:"bytes,3,rep,name=related_node,json=relatedNode" json:"related_node,omitempty"`
	Caller      []*PagedCrossReferences_Caller      `protobuf:"bytes,4,rep,name=caller" json:"caller,omitempty"`
}

func (m *PagedCrossReferences_Group) Reset()                    { *m = PagedCrossReferences_Group{} }
func (m *PagedCrossReferences_Group) String() string            { return proto.CompactTextString(m) }
func (*PagedCrossReferences_Group) ProtoMessage()               {}
func (*PagedCrossReferences_Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 2} }

func (m *PagedCrossReferences_Group) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *PagedCrossReferences_Group) GetAnchor() []*ExpandedAnchor {
	if m != nil {
		return m.Anchor
	}
	return nil
}

func (m *PagedCrossReferences_Group) GetRelatedNode() []*PagedCrossReferences_RelatedNode {
	if m != nil {
		return m.RelatedNode
	}
	return nil
}

func (m *PagedCrossReferences_Group) GetCaller() []*PagedCrossReferences_Caller {
	if m != nil {
		return m.Caller
	}
	return nil
}

type PagedCrossReferences_Page struct {
	PageKey      string                      `protobuf:"bytes,1,opt,name=page_key,json=pageKey" json:"page_key,omitempty"`
	SourceTicket string                      `protobuf:"bytes,2,opt,name=source_ticket,json=sourceTicket" json:"source_ticket,omitempty"`
	Group        *PagedCrossReferences_Group `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
}

func (m *PagedCrossReferences_Page) Reset()                    { *m = PagedCrossReferences_Page{} }
func (m *PagedCrossReferences_Page) String() string            { return proto.CompactTextString(m) }
func (*PagedCrossReferences_Page) ProtoMessage()               {}
func (*PagedCrossReferences_Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 3} }

func (m *PagedCrossReferences_Page) GetPageKey() string {
	if m != nil {
		return m.PageKey
	}
	return ""
}

func (m *PagedCrossReferences_Page) GetSourceTicket() string {
	if m != nil {
		return m.SourceTicket
	}
	return ""
}

func (m *PagedCrossReferences_Page) GetGroup() *PagedCrossReferences_Group {
	if m != nil {
		return m.Group
	}
	return nil
}

type PagedCrossReferences_PageIndex struct {
	Kind    string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Count   int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	PageKey string `protobuf:"bytes,3,opt,name=page_key,json=pageKey" json:"page_key,omitempty"`
}

func (m *PagedCrossReferences_PageIndex) Reset()         { *m = PagedCrossReferences_PageIndex{} }
func (m *PagedCrossReferences_PageIndex) String() string { return proto.CompactTextString(m) }
func (*PagedCrossReferences_PageIndex) ProtoMessage()    {}
func (*PagedCrossReferences_PageIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 4}
}

func (m *PagedCrossReferences_PageIndex) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *PagedCrossReferences_PageIndex) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PagedCrossReferences_PageIndex) GetPageKey() string {
	if m != nil {
		return m.PageKey
	}
	return ""
}

type Document struct {
	Ticket       string                           `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	MarkedSource *kythe_proto_common.MarkedSource `protobuf:"bytes,2,opt,name=marked_source,json=markedSource" json:"marked_source,omitempty"`
	RawText      string                           `protobuf:"bytes,3,opt,name=raw_text,json=rawText" json:"raw_text,omitempty"`
	Link         []*kythe_proto_common.Link       `protobuf:"bytes,4,rep,name=link" json:"link,omitempty"`
	ChildTicket  []string                         `protobuf:"bytes,5,rep,name=child_ticket,json=childTicket" json:"child_ticket,omitempty"`
	Node         []*Node                          `protobuf:"bytes,6,rep,name=node" json:"node,omitempty"`
	DocumentedBy string                           `protobuf:"bytes,7,opt,name=documented_by,json=documentedBy" json:"documented_by,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Document) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *Document) GetMarkedSource() *kythe_proto_common.MarkedSource {
	if m != nil {
		return m.MarkedSource
	}
	return nil
}

func (m *Document) GetRawText() string {
	if m != nil {
		return m.RawText
	}
	return ""
}

func (m *Document) GetLink() []*kythe_proto_common.Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Document) GetChildTicket() []string {
	if m != nil {
		return m.ChildTicket
	}
	return nil
}

func (m *Document) GetNode() []*Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Document) GetDocumentedBy() string {
	if m != nil {
		return m.DocumentedBy
	}
	return ""
}

type IdentifierMatch struct {
	QualifiedName string                  `protobuf:"bytes,1,opt,name=qualified_name,json=qualifiedName" json:"qualified_name,omitempty"`
	BaseName      string                  `protobuf:"bytes,2,opt,name=base_name,json=baseName" json:"base_name,omitempty"`
	Node          []*IdentifierMatch_Node `protobuf:"bytes,3,rep,name=node" json:"node,omitempty"`
}

func (m *IdentifierMatch) Reset()                    { *m = IdentifierMatch{} }
func (m *IdentifierMatch) String() string            { return proto.CompactTextString(m) }
func (*IdentifierMatch) ProtoMessage()               {}
func (*IdentifierMatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *IdentifierMatch) GetQualifiedName() string {
	if m != nil {
		return m.QualifiedName
	}
	return ""
}

func (m *IdentifierMatch) GetBaseName() string {
	if m != nil {
		return m.BaseName
	}
	return ""
}

func (m *IdentifierMatch) GetNode() []*IdentifierMatch_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type IdentifierMatch_Node struct {
	Ticket      string `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	NodeKind    string `protobuf:"bytes,2,opt,name=node_kind,json=nodeKind" json:"node_kind,omitempty"`
	NodeSubkind string `protobuf:"bytes,3,opt,name=node_subkind,json=nodeSubkind" json:"node_subkind,omitempty"`
}

func (m *IdentifierMatch_Node) Reset()                    { *m = IdentifierMatch_Node{} }
func (m *IdentifierMatch_Node) String() string            { return proto.CompactTextString(m) }
func (*IdentifierMatch_Node) ProtoMessage()               {}
func (*IdentifierMatch_Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

func (m *IdentifierMatch_Node) GetTicket() string {
	if m != nil {
		return m.Ticket
	}
	return ""
}

func (m *IdentifierMatch_Node) GetNodeKind() string {
	if m != nil {
		return m.NodeKind
	}
	return ""
}

func (m *IdentifierMatch_Node) GetNodeSubkind() string {
	if m != nil {
		return m.NodeSubkind
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "kythe.proto.serving.Node")
	proto.RegisterType((*Edge)(nil), "kythe.proto.serving.Edge")
	proto.RegisterType((*EdgeGroup)(nil), "kythe.proto.serving.EdgeGroup")
	proto.RegisterType((*EdgeGroup_Edge)(nil), "kythe.proto.serving.EdgeGroup.Edge")
	proto.RegisterType((*PagedEdgeSet)(nil), "kythe.proto.serving.PagedEdgeSet")
	proto.RegisterType((*PageIndex)(nil), "kythe.proto.serving.PageIndex")
	proto.RegisterType((*EdgePage)(nil), "kythe.proto.serving.EdgePage")
	proto.RegisterType((*FileDirectory)(nil), "kythe.proto.serving.FileDirectory")
	proto.RegisterType((*CorpusRoots)(nil), "kythe.proto.serving.CorpusRoots")
	proto.RegisterType((*CorpusRoots_Corpus)(nil), "kythe.proto.serving.CorpusRoots.Corpus")
	proto.RegisterType((*File)(nil), "kythe.proto.serving.File")
	proto.RegisterType((*RawAnchor)(nil), "kythe.proto.serving.RawAnchor")
	proto.RegisterType((*ExpandedAnchor)(nil), "kythe.proto.serving.ExpandedAnchor")
	proto.RegisterType((*FileDecorations)(nil), "kythe.proto.serving.FileDecorations")
	proto.RegisterType((*FileDecorations_Decoration)(nil), "kythe.proto.serving.FileDecorations.Decoration")
	proto.RegisterType((*FileDecorations_Override)(nil), "kythe.proto.serving.FileDecorations.Override")
	proto.RegisterType((*PagedCrossReferences)(nil), "kythe.proto.serving.PagedCrossReferences")
	proto.RegisterType((*PagedCrossReferences_RelatedNode)(nil), "kythe.proto.serving.PagedCrossReferences.RelatedNode")
	proto.RegisterType((*PagedCrossReferences_Caller)(nil), "kythe.proto.serving.PagedCrossReferences.Caller")
	proto.RegisterType((*PagedCrossReferences_Group)(nil), "kythe.proto.serving.PagedCrossReferences.Group")
	proto.RegisterType((*PagedCrossReferences_Page)(nil), "kythe.proto.serving.PagedCrossReferences.Page")
	proto.RegisterType((*PagedCrossReferences_PageIndex)(nil), "kythe.proto.serving.PagedCrossReferences.PageIndex")
	proto.RegisterType((*Document)(nil), "kythe.proto.serving.Document")
	proto.RegisterType((*IdentifierMatch)(nil), "kythe.proto.serving.IdentifierMatch")
	proto.RegisterType((*IdentifierMatch_Node)(nil), "kythe.proto.serving.IdentifierMatch.Node")
	proto.RegisterEnum("kythe.proto.serving.FileDecorations_Override_Kind", FileDecorations_Override_Kind_name, FileDecorations_Override_Kind_value)
}

func init() { proto.RegisterFile("kythe/proto/serving.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x6e, 0x1b, 0x47,
	0x12, 0xde, 0x91, 0x86, 0x14, 0x59, 0x43, 0xfd, 0xb8, 0xed, 0x35, 0x46, 0x34, 0xd6, 0x96, 0xc7,
	0x58, 0x58, 0xc6, 0xda, 0xd4, 0xae, 0xec, 0x4d, 0x80, 0x18, 0x8e, 0x11, 0x4b, 0x74, 0xe2, 0x3f,
	0xc9, 0x68, 0x0a, 0x8e, 0x4f, 0x19, 0x8c, 0xa6, 0x5b, 0xd4, 0x40, 0x64, 0x37, 0x33, 0xd3, 0xb4,
	0xac, 0x7b, 0x72, 0x0a, 0xf2, 0x08, 0xb9, 0xe4, 0x16, 0x04, 0xb9, 0xe4, 0x29, 0xf2, 0x06, 0x39,
	0xe4, 0x35, 0x82, 0x5c, 0x92, 0x43, 0xd0, 0xd5, 0x3d, 0xc3, 0x91, 0x45, 0x4a, 0x8c, 0x90, 0x93,
	0xba, 0x6b, 0xaa, 0xaa, 0xab, 0xbe, 0xaa, 0xfe, 0xba, 0x28, 0x58, 0x3e, 0x38, 0x52, 0xfb, 0x7c,
	0x6d, 0x90, 0x4a, 0x25, 0xd7, 0x32, 0x9e, 0xbe, 0x49, 0x44, 0xb7, 0x85, 0x3b, 0x72, 0x11, 0x3f,
	0x99, 0x4d, 0xcb, 0x7e, 0x6a, 0xfa, 0x65, 0xfd, 0x58, 0xf6, 0xfb, 0x52, 0x18, 0x8d, 0xe0, 0x5b,
	0x07, 0xdc, 0x2d, 0xc9, 0x38, 0xb9, 0x0c, 0x55, 0x95, 0xc4, 0x07, 0x5c, 0xf9, 0xce, 0x8a, 0xb3,
	0x5a, 0xa7, 0x76, 0x47, 0x6e, 0x83, 0xbb, 0x17, 0xc5, 0xca, 0x9f, 0x59, 0x99, 0x5d, 0xf5, 0xd6,
	0xfd, 0x56, 0xd9, 0xbd, 0xf5, 0xf4, 0x38, 0x8a, 0x15, 0x45, 0x2d, 0xb2, 0x03, 0x17, 0x19, 0xdf,
	0x4b, 0x44, 0xa2, 0x12, 0x29, 0xc2, 0x9e, 0x8c, 0x23, 0xbd, 0xf0, 0x67, 0x57, 0x9c, 0x55, 0x6f,
	0xfd, 0x46, 0x6b, 0x4c, 0x6c, 0xad, 0xf6, 0xdb, 0x41, 0x24, 0x18, 0x67, 0x1f, 0x89, 0x78, 0x5f,
	0xa6, 0x94, 0x8c, 0xec, 0x9f, 0x5b, 0xf3, 0xe0, 0x27, 0x07, 0xdc, 0x36, 0xeb, 0x72, 0xf2, 0x3f,
	0xa8, 0x66, 0x72, 0x98, 0xc6, 0x1c, 0x83, 0xf4, 0xd6, 0x97, 0xc7, 0x7a, 0xd4, 0xf9, 0x50, 0xab,
	0x48, 0x08, 0xb8, 0x07, 0x89, 0x60, 0xfe, 0x0c, 0x66, 0x85, 0x6b, 0xe2, 0xc3, 0x9c, 0x4c, 0x59,
	0x22, 0xa2, 0x9e, 0x5f, 0x59, 0x71, 0x56, 0x2b, 0x34, 0xdf, 0xea, 0x03, 0x54, 0x94, 0x76, 0xb9,
	0xb2, 0x21, 0x9f, 0x76, 0x80, 0x51, 0x2c, 0x00, 0x72, 0xa7, 0x01, 0x28, 0xf8, 0xc1, 0x81, 0xba,
	0x4e, 0xe5, 0xe3, 0x54, 0x0e, 0x07, 0x45, 0x70, 0x4e, 0x29, 0xb8, 0xf7, 0xc1, 0xe5, 0xac, 0xcb,
	0x2d, 0xe0, 0x13, 0x30, 0xcb, 0x3d, 0xe0, 0x8a, 0xa2, 0x41, 0xb3, 0x33, 0x02, 0xc9, 0xe6, 0xe0,
	0x4c, 0x9b, 0x43, 0x09, 0x90, 0x99, 0x63, 0x80, 0x04, 0x3f, 0x3b, 0xd0, 0x78, 0x19, 0x75, 0x39,
	0xd3, 0xae, 0x3b, 0x5c, 0x9d, 0xa7, 0x04, 0xf7, 0xa0, 0xd2, 0xd5, 0xc1, 0xda, 0x94, 0xae, 0x9e,
	0x9e, 0x12, 0x35, 0xca, 0xe4, 0x1a, 0x78, 0x4a, 0xaa, 0xa8, 0x17, 0xea, 0xe4, 0x32, 0xac, 0x47,
	0x85, 0x02, 0x8a, 0xb4, 0x6e, 0x46, 0x1e, 0x00, 0x0c, 0xa2, 0x2e, 0x0f, 0x13, 0xc1, 0xf8, 0x5b,
	0x0b, 0xff, 0x78, 0xdf, 0x3a, 0x81, 0x27, 0x5a, 0x8b, 0xd6, 0x07, 0xf9, 0x32, 0xd8, 0x85, 0x7a,
	0x21, 0x27, 0x57, 0xa0, 0xae, 0x8f, 0x09, 0x4b, 0xd5, 0xa8, 0x69, 0xc1, 0x33, 0x5d, 0x91, 0x7f,
	0x01, 0xe0, 0xc7, 0x58, 0x0e, 0x85, 0xb2, 0x00, 0xa1, 0xfa, 0x86, 0x16, 0x90, 0x65, 0xa8, 0x61,
	0x1c, 0x07, 0xfc, 0x08, 0xa3, 0xac, 0xd3, 0x39, 0xbd, 0x7f, 0xc6, 0x8f, 0x82, 0xaf, 0x1c, 0xa8,
	0xe9, 0x60, 0xf5, 0x41, 0xc7, 0xf4, 0x9c, 0x63, 0x7a, 0xe4, 0x06, 0xcc, 0x1b, 0xac, 0x42, 0x7b,
	0x07, 0x4d, 0xb7, 0x36, 0x8c, 0x70, 0xc7, 0xdc, 0xc4, 0x87, 0xe0, 0x21, 0x14, 0xa1, 0x01, 0xd3,
	0x34, 0xe8, 0x59, 0x60, 0x62, 0xe4, 0x19, 0xae, 0x83, 0x1d, 0x98, 0x7f, 0x9c, 0xf4, 0xf8, 0x66,
	0x92, 0xf2, 0x58, 0xc9, 0xf4, 0x88, 0x04, 0xd0, 0xc8, 0x86, 0xbb, 0x2c, 0xdf, 0xfb, 0xce, 0xca,
	0x2c, 0x9e, 0x5a, 0x92, 0xe9, 0x32, 0xec, 0x25, 0xbd, 0x52, 0x60, 0x5a, 0x05, 0xb4, 0xc8, 0x84,
	0x15, 0x7c, 0xe1, 0x80, 0xb7, 0x21, 0xd3, 0xc1, 0x30, 0xa3, 0x52, 0xaa, 0x8c, 0x3c, 0x84, 0x6a,
	0x8c, 0x5b, 0x74, 0xe7, 0xad, 0xdf, 0x1c, 0x1b, 0x61, 0xc9, 0x22, 0x5f, 0x5b, 0xb3, 0xe6, 0x3d,
	0xa8, 0x1a, 0x89, 0xe6, 0xa4, 0xc2, 0x15, 0x72, 0x92, 0xd9, 0xe9, 0x6b, 0x93, 0x4a, 0x99, 0x07,
	0x83, 0xeb, 0x60, 0x0b, 0x5c, 0x9d, 0xdc, 0x44, 0x1e, 0x23, 0xe0, 0x2a, 0xfe, 0xd6, 0x20, 0xdb,
	0xa0, 0xb8, 0x26, 0x4d, 0xa8, 0x71, 0x11, 0x4b, 0x96, 0x88, 0xae, 0xad, 0x5c, 0xb1, 0x0f, 0xbe,
	0x77, 0xa0, 0x4e, 0xa3, 0x43, 0xc3, 0x4a, 0x13, 0xbd, 0x5e, 0x87, 0x46, 0xa6, 0xa2, 0x54, 0x85,
	0x72, 0x6f, 0x2f, 0xe3, 0x79, 0x73, 0x78, 0x28, 0xdb, 0x46, 0x11, 0x76, 0x8f, 0x60, 0xb9, 0xc2,
	0xac, 0xed, 0x1e, 0xc1, 0xec, 0x67, 0x5d, 0x7a, 0x91, 0x0c, 0x06, 0x5c, 0x85, 0x68, 0xe5, 0xbb,
	0xa8, 0xd1, 0xb0, 0xc2, 0x8e, 0x96, 0xe9, 0x22, 0xe4, 0x4a, 0x5c, 0x30, 0x4b, 0x5a, 0x60, 0x45,
	0x6d, 0xc1, 0x82, 0x5f, 0x1c, 0x58, 0x38, 0x4e, 0xa4, 0xa7, 0x01, 0x71, 0x82, 0x10, 0x73, 0x70,
	0x5c, 0x23, 0x43, 0x70, 0x6e, 0x83, 0x9b, 0x0d, 0x22, 0x81, 0x87, 0x4d, 0xe0, 0xb5, 0xce, 0x20,
	0x12, 0x14, 0xb5, 0x34, 0x83, 0xd8, 0x70, 0xfc, 0xaa, 0xe9, 0x6d, 0xbb, 0x25, 0xf7, 0xa1, 0x51,
	0x24, 0xa8, 0xfd, 0xcd, 0x9d, 0xe1, 0x2f, 0xcf, 0x54, 0x6f, 0x9e, 0xba, 0xb5, 0xd9, 0x25, 0x37,
	0xf8, 0x72, 0x0e, 0x16, 0xb1, 0x73, 0x79, 0x2c, 0x53, 0x7c, 0x12, 0x32, 0x72, 0x07, 0x5c, 0xdd,
	0x84, 0xa7, 0xb2, 0x90, 0xb6, 0xa1, 0xa8, 0x46, 0xb6, 0x01, 0x58, 0x61, 0x6d, 0x89, 0x68, 0x6d,
	0xa2, 0x51, 0xe9, 0xa0, 0xd6, 0x68, 0x4d, 0x4b, 0x2e, 0x4a, 0x2c, 0x6b, 0x98, 0x67, 0x0a, 0x96,
	0xa5, 0x40, 0xcc, 0x2a, 0x1c, 0xbd, 0x71, 0x9a, 0xd8, 0x66, 0xa7, 0x7d, 0x1b, 0x2f, 0x18, 0xf3,
	0xcd, 0x91, 0x35, 0x79, 0x05, 0x8b, 0xd6, 0xa7, 0x7c, 0xc3, 0xd3, 0x34, 0x61, 0xdc, 0xaf, 0xa0,
	0xc3, 0x3b, 0x53, 0x25, 0xb7, 0x6d, 0x8d, 0xe8, 0x82, 0xf1, 0x92, 0xef, 0xc9, 0x87, 0x00, 0x2c,
	0x89, 0xba, 0x42, 0x66, 0x2a, 0x89, 0xfd, 0xea, 0x18, 0x72, 0xb5, 0x35, 0xdb, 0x2c, 0xb4, 0x68,
	0xc9, 0xa2, 0xf9, 0x8d, 0x03, 0x30, 0x3a, 0x88, 0xbc, 0x07, 0xd5, 0x08, 0x73, 0xb0, 0xf5, 0x1a,
	0x4f, 0x5b, 0xc5, 0x7d, 0xa3, 0x56, 0x7b, 0x6c, 0xb3, 0x5e, 0x2e, 0x90, 0xaf, 0xd8, 0xc6, 0x36,
	0xf0, 0xfe, 0x07, 0x2e, 0x9c, 0x80, 0xd7, 0x76, 0xf4, 0xd2, 0xbb, 0xc0, 0x35, 0x7f, 0x9c, 0x81,
	0x5a, 0x91, 0xec, 0x55, 0x00, 0x8b, 0x9e, 0x66, 0x02, 0x73, 0x5d, 0x4a, 0x92, 0xd2, 0x77, 0xc6,
	0x85, 0x8d, 0xa5, 0x24, 0x21, 0x77, 0xe1, 0x9f, 0xa3, 0x5d, 0xf9, 0x74, 0x13, 0xe0, 0xa5, 0xd1,
	0xc7, 0x51, 0x04, 0xe4, 0xb1, 0x4d, 0x4d, 0x33, 0xc2, 0xc2, 0xfa, 0xfa, 0x5f, 0x2a, 0x57, 0x4b,
	0xbf, 0x4b, 0x16, 0x8e, 0x36, 0xcc, 0xf7, 0xa3, 0xf4, 0x80, 0xb3, 0xd0, 0xbe, 0xcb, 0x2e, 0x22,
	0xbc, 0x32, 0xae, 0x58, 0x2f, 0x50, 0xb1, 0x83, 0x7a, 0xb4, 0xd1, 0x2f, 0xed, 0x82, 0x00, 0x5c,
	0x7c, 0xec, 0xe6, 0xa1, 0xbe, 0xfd, 0xaa, 0x4d, 0xe9, 0x93, 0xcd, 0x76, 0x67, 0xe9, 0x1f, 0xc4,
	0x83, 0xb9, 0xf6, 0xeb, 0x9d, 0xf6, 0xd6, 0x66, 0x67, 0xc9, 0x09, 0x7e, 0xaf, 0xc3, 0x25, 0x1c,
	0x06, 0x36, 0x52, 0x99, 0x65, 0x94, 0xef, 0xf1, 0x94, 0x8b, 0x98, 0x67, 0x9a, 0xe3, 0xfa, 0x3c,
	0xed, 0xf2, 0xf0, 0x30, 0x51, 0xfb, 0xfe, 0x1c, 0xd2, 0x72, 0x1d, 0x25, 0x9f, 0x26, 0x6a, 0xff,
	0xe4, 0xf3, 0xe6, 0x8c, 0x79, 0xde, 0x3e, 0x00, 0xcf, 0x2a, 0x09, 0xc9, 0xb8, 0x5f, 0x3b, 0x6b,
	0xba, 0x00, 0xa3, 0x8d, 0xc3, 0x6b, 0xfb, 0xf8, 0x84, 0xb1, 0x36, 0x71, 0x0a, 0x78, 0x37, 0xf2,
	0xd6, 0xb1, 0x91, 0x83, 0x1e, 0x9b, 0x28, 0xcc, 0xc5, 0xbc, 0x3b, 0xbd, 0xaf, 0x71, 0x63, 0x06,
	0xb9, 0x05, 0x4b, 0x66, 0x8c, 0x49, 0x0b, 0x45, 0x4b, 0xf1, 0x8b, 0x28, 0x2f, 0xa1, 0x78, 0x15,
	0x20, 0x11, 0xb1, 0xec, 0x0f, 0x7a, 0x5c, 0x71, 0xec, 0x9d, 0x1a, 0x2d, 0x49, 0x4e, 0x56, 0xba,
	0x7a, 0x9e, 0x4a, 0x37, 0x5f, 0x81, 0x47, 0x79, 0x2f, 0x52, 0x9c, 0x21, 0x76, 0x77, 0xc0, 0x45,
	0xc0, 0xcf, 0x1c, 0xe7, 0x50, 0x6d, 0xf2, 0xa8, 0xd8, 0xfc, 0xcd, 0x81, 0xea, 0x46, 0xd4, 0xeb,
	0xf1, 0x94, 0xdc, 0x87, 0x6a, 0x8c, 0x2b, 0xeb, 0x75, 0x2a, 0x76, 0xb3, 0x26, 0xe4, 0x26, 0x2c,
	0x66, 0xbc, 0x1f, 0x09, 0x95, 0xc4, 0xa1, 0xf5, 0x62, 0xae, 0xdc, 0x42, 0x2e, 0xb6, 0xa7, 0x9c,
	0xc0, 0x63, 0xf6, 0x3c, 0x78, 0x90, 0x87, 0x50, 0xd3, 0xc7, 0x64, 0x89, 0xe2, 0x96, 0xcb, 0xa7,
	0x0a, 0xb7, 0x30, 0x6a, 0xfe, 0xe1, 0x40, 0x65, 0xf2, 0x3c, 0x7f, 0xbf, 0xa0, 0xbe, 0x99, 0xe9,
	0x9d, 0xe7, 0xfc, 0xf7, 0x1a, 0x1a, 0xa9, 0xa9, 0x95, 0xb9, 0x15, 0xa6, 0x27, 0xff, 0x3f, 0x7d,
	0x4f, 0x96, 0x2a, 0x4d, 0xbd, 0xb4, 0x54, 0xf6, 0x4f, 0x8a, 0x12, 0x99, 0x9c, 0xff, 0x3b, 0xbd,
	0x4f, 0x03, 0x7f, 0x5e, 0xaf, 0xe6, 0xd7, 0x0e, 0xb8, 0x7f, 0xcb, 0x80, 0x5b, 0xdc, 0x62, 0x53,
	0xc7, 0x73, 0xde, 0xe2, 0xe6, 0xcb, 0xf2, 0x60, 0x3f, 0xae, 0x22, 0x97, 0xa0, 0x52, 0x1e, 0xe5,
	0xcd, 0xe6, 0x94, 0x31, 0xfe, 0xa9, 0x5b, 0x83, 0x25, 0x2f, 0xf8, 0x6e, 0x06, 0x6a, 0x9b, 0x32,
	0x1e, 0xf6, 0xb9, 0x50, 0x13, 0xa7, 0xab, 0x13, 0x3d, 0x39, 0x73, 0xae, 0x9e, 0x5c, 0x86, 0x5a,
	0x1a, 0x1d, 0x86, 0x38, 0x94, 0xd9, 0x60, 0xd2, 0xe8, 0x70, 0xc7, 0xce, 0x65, 0xbd, 0x44, 0x1c,
	0x9c, 0xf6, 0x7b, 0xf3, 0x79, 0x22, 0x0e, 0x28, 0x6a, 0xe9, 0x01, 0x35, 0xde, 0x4f, 0x7a, 0x2c,
	0xc7, 0xbd, 0x82, 0xdc, 0xec, 0xa1, 0xcc, 0xc2, 0x9e, 0x13, 0x40, 0xf5, 0xac, 0x39, 0xc6, 0x10,
	0xc0, 0x0d, 0x98, 0x67, 0x16, 0x05, 0xce, 0xc2, 0xdd, 0x23, 0x1c, 0xe8, 0xea, 0xb4, 0x31, 0x12,
	0x3e, 0x3a, 0x0a, 0x7e, 0x75, 0x60, 0xf1, 0x09, 0xe3, 0x42, 0x25, 0x7b, 0x09, 0x4f, 0x5f, 0x44,
	0x2a, 0xde, 0x27, 0xff, 0x86, 0x85, 0xcf, 0x87, 0x51, 0x4f, 0x4b, 0x58, 0x28, 0xa2, 0x3e, 0xb7,
	0xd0, 0xcd, 0x17, 0xd2, 0xad, 0xa8, 0xcf, 0xf5, 0x4f, 0xb1, 0xdd, 0x28, 0xe3, 0x46, 0xc3, 0xb4,
	0x49, 0x4d, 0x0b, 0xf0, 0xe3, 0x03, 0x1b, 0xab, 0xb9, 0x07, 0xb7, 0xc6, 0xc6, 0xfa, 0xce, 0xb9,
	0xa5, 0xd8, 0x9b, 0x9f, 0x9d, 0xf1, 0xcf, 0x8e, 0x2b, 0x50, 0xd7, 0x7a, 0x61, 0x69, 0xe6, 0xa8,
	0x69, 0x01, 0xbe, 0x8c, 0xd7, 0xa1, 0x81, 0x1f, 0xb3, 0xe1, 0x6e, 0xf1, 0x70, 0xd7, 0xa9, 0xa7,
	0x65, 0x1d, 0x23, 0x7a, 0x74, 0x1d, 0xae, 0xc5, 0xb2, 0xdf, 0xea, 0x4a, 0xd9, 0xed, 0xf1, 0x16,
	0xe3, 0x6f, 0x94, 0x94, 0xbd, 0xac, 0x1c, 0xe5, 0x6e, 0x15, 0xff, 0xdc, 0xfd, 0x33, 0x00, 0x00,
	0xff, 0xff, 0x9b, 0x2e, 0x91, 0x79, 0xc3, 0x11, 0x00, 0x00,
}
