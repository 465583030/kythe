// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kythe/proto/storage.proto

/*
Package storage_go_proto is a generated protocol buffer package.

It is generated from these files:
	kythe/proto/storage.proto

It has these top-level messages:
	VName
	VNameMask
	Entry
	Entries
	ReadRequest
	WriteRequest
	WriteReply
	ScanRequest
	CountRequest
	CountReply
	ShardRequest
*/
package storage_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VName struct {
	Signature string `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	Corpus    string `protobuf:"bytes,2,opt,name=corpus" json:"corpus,omitempty"`
	Root      string `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	Language  string `protobuf:"bytes,5,opt,name=language" json:"language,omitempty"`
}

func (m *VName) Reset()                    { *m = VName{} }
func (m *VName) String() string            { return proto.CompactTextString(m) }
func (*VName) ProtoMessage()               {}
func (*VName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VName) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *VName) GetCorpus() string {
	if m != nil {
		return m.Corpus
	}
	return ""
}

func (m *VName) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *VName) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VName) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type VNameMask struct {
	Signature bool `protobuf:"varint,1,opt,name=signature" json:"signature,omitempty"`
	Corpus    bool `protobuf:"varint,2,opt,name=corpus" json:"corpus,omitempty"`
	Root      bool `protobuf:"varint,3,opt,name=root" json:"root,omitempty"`
	Path      bool `protobuf:"varint,4,opt,name=path" json:"path,omitempty"`
	Language  bool `protobuf:"varint,5,opt,name=language" json:"language,omitempty"`
}

func (m *VNameMask) Reset()                    { *m = VNameMask{} }
func (m *VNameMask) String() string            { return proto.CompactTextString(m) }
func (*VNameMask) ProtoMessage()               {}
func (*VNameMask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VNameMask) GetSignature() bool {
	if m != nil {
		return m.Signature
	}
	return false
}

func (m *VNameMask) GetCorpus() bool {
	if m != nil {
		return m.Corpus
	}
	return false
}

func (m *VNameMask) GetRoot() bool {
	if m != nil {
		return m.Root
	}
	return false
}

func (m *VNameMask) GetPath() bool {
	if m != nil {
		return m.Path
	}
	return false
}

func (m *VNameMask) GetLanguage() bool {
	if m != nil {
		return m.Language
	}
	return false
}

type Entry struct {
	Source    *VName `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	EdgeKind  string `protobuf:"bytes,2,opt,name=edge_kind,json=edgeKind" json:"edge_kind,omitempty"`
	Target    *VName `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	FactName  string `protobuf:"bytes,4,opt,name=fact_name,json=factName" json:"fact_name,omitempty"`
	FactValue []byte `protobuf:"bytes,5,opt,name=fact_value,json=factValue,proto3" json:"fact_value,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Entry) GetSource() *VName {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Entry) GetEdgeKind() string {
	if m != nil {
		return m.EdgeKind
	}
	return ""
}

func (m *Entry) GetTarget() *VName {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Entry) GetFactName() string {
	if m != nil {
		return m.FactName
	}
	return ""
}

func (m *Entry) GetFactValue() []byte {
	if m != nil {
		return m.FactValue
	}
	return nil
}

type Entries struct {
	Entries []*Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *Entries) Reset()                    { *m = Entries{} }
func (m *Entries) String() string            { return proto.CompactTextString(m) }
func (*Entries) ProtoMessage()               {}
func (*Entries) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Entries) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ReadRequest struct {
	Source   *VName `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	EdgeKind string `protobuf:"bytes,2,opt,name=edge_kind,json=edgeKind" json:"edge_kind,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadRequest) GetSource() *VName {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ReadRequest) GetEdgeKind() string {
	if m != nil {
		return m.EdgeKind
	}
	return ""
}

type WriteRequest struct {
	Source *VName                 `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Update []*WriteRequest_Update `protobuf:"bytes,2,rep,name=update" json:"update,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *WriteRequest) GetSource() *VName {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *WriteRequest) GetUpdate() []*WriteRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

type WriteRequest_Update struct {
	EdgeKind  string `protobuf:"bytes,1,opt,name=edge_kind,json=edgeKind" json:"edge_kind,omitempty"`
	Target    *VName `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	FactName  string `protobuf:"bytes,3,opt,name=fact_name,json=factName" json:"fact_name,omitempty"`
	FactValue []byte `protobuf:"bytes,4,opt,name=fact_value,json=factValue,proto3" json:"fact_value,omitempty"`
}

func (m *WriteRequest_Update) Reset()                    { *m = WriteRequest_Update{} }
func (m *WriteRequest_Update) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest_Update) ProtoMessage()               {}
func (*WriteRequest_Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *WriteRequest_Update) GetEdgeKind() string {
	if m != nil {
		return m.EdgeKind
	}
	return ""
}

func (m *WriteRequest_Update) GetTarget() *VName {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *WriteRequest_Update) GetFactName() string {
	if m != nil {
		return m.FactName
	}
	return ""
}

func (m *WriteRequest_Update) GetFactValue() []byte {
	if m != nil {
		return m.FactValue
	}
	return nil
}

type WriteReply struct {
}

func (m *WriteReply) Reset()                    { *m = WriteReply{} }
func (m *WriteReply) String() string            { return proto.CompactTextString(m) }
func (*WriteReply) ProtoMessage()               {}
func (*WriteReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ScanRequest struct {
	Target     *VName `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	EdgeKind   string `protobuf:"bytes,2,opt,name=edge_kind,json=edgeKind" json:"edge_kind,omitempty"`
	FactPrefix string `protobuf:"bytes,3,opt,name=fact_prefix,json=factPrefix" json:"fact_prefix,omitempty"`
}

func (m *ScanRequest) Reset()                    { *m = ScanRequest{} }
func (m *ScanRequest) String() string            { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()               {}
func (*ScanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ScanRequest) GetTarget() *VName {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ScanRequest) GetEdgeKind() string {
	if m != nil {
		return m.EdgeKind
	}
	return ""
}

func (m *ScanRequest) GetFactPrefix() string {
	if m != nil {
		return m.FactPrefix
	}
	return ""
}

type CountRequest struct {
	Index  int64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Shards int64 `protobuf:"varint,2,opt,name=shards" json:"shards,omitempty"`
}

func (m *CountRequest) Reset()                    { *m = CountRequest{} }
func (m *CountRequest) String() string            { return proto.CompactTextString(m) }
func (*CountRequest) ProtoMessage()               {}
func (*CountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CountRequest) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CountRequest) GetShards() int64 {
	if m != nil {
		return m.Shards
	}
	return 0
}

type CountReply struct {
	Entries int64 `protobuf:"varint,1,opt,name=entries" json:"entries,omitempty"`
}

func (m *CountReply) Reset()                    { *m = CountReply{} }
func (m *CountReply) String() string            { return proto.CompactTextString(m) }
func (*CountReply) ProtoMessage()               {}
func (*CountReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CountReply) GetEntries() int64 {
	if m != nil {
		return m.Entries
	}
	return 0
}

type ShardRequest struct {
	Index  int64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Shards int64 `protobuf:"varint,2,opt,name=shards" json:"shards,omitempty"`
}

func (m *ShardRequest) Reset()                    { *m = ShardRequest{} }
func (m *ShardRequest) String() string            { return proto.CompactTextString(m) }
func (*ShardRequest) ProtoMessage()               {}
func (*ShardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ShardRequest) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ShardRequest) GetShards() int64 {
	if m != nil {
		return m.Shards
	}
	return 0
}

func init() {
	proto.RegisterType((*VName)(nil), "kythe.proto.VName")
	proto.RegisterType((*VNameMask)(nil), "kythe.proto.VNameMask")
	proto.RegisterType((*Entry)(nil), "kythe.proto.Entry")
	proto.RegisterType((*Entries)(nil), "kythe.proto.Entries")
	proto.RegisterType((*ReadRequest)(nil), "kythe.proto.ReadRequest")
	proto.RegisterType((*WriteRequest)(nil), "kythe.proto.WriteRequest")
	proto.RegisterType((*WriteRequest_Update)(nil), "kythe.proto.WriteRequest.Update")
	proto.RegisterType((*WriteReply)(nil), "kythe.proto.WriteReply")
	proto.RegisterType((*ScanRequest)(nil), "kythe.proto.ScanRequest")
	proto.RegisterType((*CountRequest)(nil), "kythe.proto.CountRequest")
	proto.RegisterType((*CountReply)(nil), "kythe.proto.CountReply")
	proto.RegisterType((*ShardRequest)(nil), "kythe.proto.ShardRequest")
}

func init() { proto.RegisterFile("kythe/proto/storage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0x95, 0xcd, 0x6e, 0x9a, 0x9d, 0xe4, 0x64, 0x21, 0x14, 0x0a, 0xa8, 0x4b, 0x0e, 0x08,
	0x21, 0x94, 0x4a, 0x70, 0x80, 0x43, 0x4f, 0x20, 0x4e, 0x08, 0x84, 0x52, 0xb1, 0x1c, 0x2b, 0x93,
	0x4c, 0xb3, 0xd1, 0x66, 0xe3, 0x60, 0x3b, 0xa5, 0x7b, 0x44, 0x82, 0x23, 0xef, 0xc3, 0xe3, 0x21,
	0x8f, 0xdd, 0x92, 0xd2, 0x06, 0x41, 0xd5, 0x53, 0x3c, 0xbf, 0xff, 0xcc, 0x7c, 0x9e, 0xb1, 0xe1,
	0xce, 0x7a, 0xab, 0x57, 0xb8, 0xdf, 0x49, 0xa1, 0xc5, 0xbe, 0xd2, 0x42, 0xf2, 0x0a, 0x33, 0x8a,
	0x58, 0x44, 0x5b, 0x36, 0x48, 0xbf, 0x7a, 0x30, 0x5b, 0xbe, 0xe3, 0x1b, 0x64, 0xf7, 0x60, 0xae,
	0xea, 0xaa, 0xe5, 0xba, 0x97, 0x98, 0x78, 0x0b, 0xef, 0xd1, 0x3c, 0xff, 0x2d, 0xb0, 0xdb, 0x10,
	0x14, 0x42, 0x76, 0xbd, 0x4a, 0x26, 0xb4, 0xe5, 0x22, 0xc6, 0x60, 0x2a, 0x85, 0xd0, 0x89, 0x4f,
	0x2a, 0xad, 0x8d, 0xd6, 0x71, 0xbd, 0x4a, 0xa6, 0x56, 0x33, 0x6b, 0xb6, 0x0b, 0x61, 0xc3, 0xdb,
	0xaa, 0xe7, 0x15, 0x26, 0x33, 0xd2, 0xcf, 0xe3, 0xf4, 0xbb, 0x07, 0x73, 0x62, 0x78, 0xcb, 0xd5,
	0xfa, 0x32, 0x47, 0x38, 0xce, 0x11, 0x5e, 0xc9, 0x11, 0x5e, 0xc1, 0x11, 0x8e, 0x70, 0x84, 0x03,
	0x8e, 0x9f, 0x1e, 0xcc, 0x5e, 0xb7, 0x5a, 0x6e, 0xd9, 0x63, 0x08, 0x94, 0xe8, 0x65, 0x61, 0x01,
	0xa2, 0xa7, 0x2c, 0x1b, 0xf4, 0x2c, 0x23, 0xd6, 0xdc, 0x39, 0xd8, 0x5d, 0x98, 0x63, 0x59, 0xe1,
	0xd1, 0xba, 0x6e, 0x4b, 0xd7, 0x9c, 0xd0, 0x08, 0x6f, 0xea, 0xb6, 0x34, 0x89, 0x34, 0x97, 0x15,
	0x5a, 0xb0, 0x91, 0x44, 0xd6, 0x61, 0x12, 0x1d, 0xf3, 0x42, 0x1f, 0xb5, 0x7c, 0x83, 0xae, 0x77,
	0xa1, 0x11, 0x68, 0x3a, 0xf7, 0x01, 0x68, 0xf3, 0x84, 0x37, 0xbd, 0x25, 0x8f, 0x73, 0xb2, 0x2f,
	0x8d, 0x90, 0x3e, 0x87, 0x1d, 0x43, 0x5e, 0xa3, 0x62, 0x4f, 0x60, 0x07, 0xed, 0x32, 0xf1, 0x16,
	0xfe, 0xa5, 0x9a, 0x74, 0xc0, 0xfc, 0xcc, 0x92, 0x2e, 0x21, 0xca, 0x91, 0x97, 0x39, 0x7e, 0xee,
	0x51, 0xe9, 0x1b, 0x3b, 0x78, 0xfa, 0x6d, 0x02, 0xf1, 0x47, 0x59, 0x6b, 0xbc, 0x4e, 0xe6, 0x17,
	0x10, 0xf4, 0x5d, 0xc9, 0x35, 0x26, 0x13, 0x3a, 0xc1, 0xe2, 0x82, 0x77, 0x98, 0x36, 0xfb, 0x40,
	0xbe, 0xdc, 0xf9, 0x77, 0x7f, 0x78, 0x10, 0x58, 0xe9, 0x22, 0x9e, 0x37, 0x3a, 0x97, 0xc9, 0xff,
	0xcd, 0xc5, 0xff, 0xeb, 0x5c, 0xa6, 0x7f, 0xce, 0x25, 0x06, 0x70, 0xb8, 0x5d, 0xb3, 0x4d, 0xbf,
	0x40, 0x74, 0x58, 0xf0, 0x76, 0xd0, 0x12, 0x07, 0xe1, 0xfd, 0x0b, 0xc4, 0xf8, 0x2d, 0xdb, 0x83,
	0x88, 0x20, 0x3a, 0x89, 0xc7, 0xf5, 0xa9, 0x63, 0x24, 0xae, 0xf7, 0xa4, 0xa4, 0x07, 0x10, 0xbf,
	0x12, 0x7d, 0xab, 0xcf, 0x2a, 0xdf, 0x82, 0x59, 0xdd, 0x96, 0x78, 0x4a, 0x85, 0xfd, 0xdc, 0x06,
	0xe6, 0x6d, 0xa9, 0x15, 0x97, 0xa5, 0x7d, 0x5b, 0x7e, 0xee, 0xa2, 0xf4, 0x21, 0x80, 0xfb, 0xbb,
	0x6b, 0xb6, 0x2c, 0x19, 0xde, 0x2f, 0x63, 0x3b, 0xbf, 0x4b, 0x07, 0x10, 0x1f, 0x9a, 0x3f, 0xae,
	0x55, 0xe5, 0xe5, 0x03, 0xd8, 0x2b, 0xc4, 0x26, 0xab, 0x84, 0xa8, 0x1a, 0xcc, 0x4a, 0x3c, 0xd1,
	0x42, 0x34, 0x6a, 0xd8, 0x92, 0x4f, 0x01, 0x7d, 0x9e, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x1d,
	0xe7, 0x96, 0xd1, 0xdd, 0x04, 0x00, 0x00,
}
